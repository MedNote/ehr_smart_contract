{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "amountAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donateTofaucet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_requestor",
          "type": "address"
        }
      ],
      "name": "requestTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAmountAllowed",
          "type": "uint256"
        }
      ],
      "name": "setAmountallowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Faucet.sol"
  },
  "ast": {
    "absolutePath": "contracts/Faucet.sol",
    "exportedSymbols": {
      "Faucet": [
        104
      ]
    },
    "id": 105,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 104,
        "linearizedBaseContracts": [
          104
        ],
        "name": "Faucet",
        "nameLocation": "87:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "194:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 104,
            "src": "179:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "179:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ad2cd14",
            "id": 6,
            "mutability": "mutable",
            "name": "amountAllowed",
            "nameLocation": "217:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 104,
            "src": "205:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "205:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "233:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4beda63",
            "id": 10,
            "mutability": "mutable",
            "name": "lockTime",
            "nameLocation": "397:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 104,
            "src": "365:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "384:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "467:26:0",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "471:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "479:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "479:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "471:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "471:18:0"
                }
              ]
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "456:2:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:0"
            },
            "scope": 104,
            "src": "445:48:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "542:95:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "560:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "560:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "574:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "560:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                          "typeString": "literal_string \"Only owner can call this function.\""
                        },
                        "value": "Only owner can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                          "typeString": "literal_string \"Only owner can call this function.\""
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "552:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "552:66:0"
                },
                {
                  "id": 29,
                  "nodeType": "PlaceholderStatement",
                  "src": "628:1:0"
                }
              ]
            },
            "id": 31,
            "name": "onlyOwner",
            "nameLocation": "532:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:0"
            },
            "src": "523:114:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "788:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "798:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "806:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "798:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "798:16:0"
                }
              ]
            },
            "functionSelector": "13af4035",
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "778:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "778:9:0"
              }
            ],
            "name": "setOwner",
            "nameLocation": "744:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "761:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "753:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:18:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:0"
            },
            "scope": 104,
            "src": "735:86:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "990:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "amountAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1000:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51,
                      "name": "newAmountAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1016:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1000:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:32:0"
                }
              ]
            },
            "functionSelector": "f3aa52a1",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "980:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "980:9:0"
              }
            ],
            "name": "setAmountallowed",
            "nameLocation": "933:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "newAmountAllowed",
                  "nameLocation": "955:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "950:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "949:23:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:0"
            },
            "scope": 104,
            "src": "924:115:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "1138:4:0",
              "statements": []
            },
            "functionSelector": "605e73cd",
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donateTofaucet",
            "nameLocation": "1106:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:2:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:0:0"
            },
            "scope": 104,
            "src": "1097:45:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1271:532:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 65,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1355:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1355:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 67,
                            "name": "lockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1373:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 70,
                          "indexExpression": {
                            "expression": {
                              "id": 68,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1382:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1382:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1373:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1355:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f636b2074696d6520686173206e6f7420657870697265642e20506c656173652074727920616761696e206c61746572",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1395:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54a260510adf18127ecd1d9165b98cd16990d05566ea2e5a42c230dabf1f49f2",
                          "typeString": "literal_string \"lock time has not expired. Please try again later\""
                        },
                        "value": "lock time has not expired. Please try again later"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54a260510adf18127ecd1d9165b98cd16990d05566ea2e5a42c230dabf1f49f2",
                          "typeString": "literal_string \"lock time has not expired. Please try again later\""
                        }
                      ],
                      "id": 64,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1347:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:100:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:100:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 78,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1473:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Faucet_$104",
                                  "typeString": "contract Faucet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Faucet_$104",
                                  "typeString": "contract Faucet"
                                }
                              ],
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1465:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 76,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1465:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1465:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1465:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 81,
                          "name": "amountAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1489:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1465:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320696e20746865206661756365742e20506c6561736520646f6e617465",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1504:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7451b1ca2a72628ab295e67b53a3972d6777cdaf19dadbc6bcb2dee4f250c309",
                          "typeString": "literal_string \"Not enough funds in the faucet. Please donate\""
                        },
                        "value": "Not enough funds in the faucet. Please donate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7451b1ca2a72628ab295e67b53a3972d6777cdaf19dadbc6bcb2dee4f250c309",
                          "typeString": "literal_string \"Not enough funds in the faucet. Please donate\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1457:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:95:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89,
                        "name": "amountAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1673:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 86,
                        "name": "_requestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "1653:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1653:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:34:0"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 92,
                        "name": "lockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1749:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 95,
                      "indexExpression": {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1758:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1758:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1749:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 96,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1772:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1772:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:6:0",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      },
                      "src": "1772:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1749:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:47:0"
                }
              ]
            },
            "functionSelector": "580f3904",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestTokens",
            "nameLocation": "1214:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_requestor",
                  "nameLocation": "1244:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1228:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:28:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:0"
            },
            "scope": 104,
            "src": "1205:598:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 105,
        "src": "78:1727:0",
        "usedErrors": []
      }
    ],
    "src": "0:1805:0"
  },
  "bytecode": "6080604052670de0b6b3a7640000600155600080546001600160a01b03191633179055610406806100316000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100aa5780639ad2cd14146100e7578063a4beda631461010b578063f3aa52a11461013857600080fd5b806313af403514610075578063580f390414610097578063605e73cd14610095575b600080fd5b34801561008157600080fd5b5061009561009036600461032b565b610158565b005b6100956100a536600461032b565b6101ad565b3480156100b657600080fd5b506000546100ca906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f357600080fd5b506100fd60015481565b6040519081526020016100de565b34801561011757600080fd5b506100fd61012636600461032b565b60026020526000908152604090205481565b34801561014457600080fd5b5061009561015336600461034f565b6102e4565b6000546001600160a01b0316331461018b5760405162461bcd60e51b815260040161018290610368565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526002602052604090205442116102255760405162461bcd60e51b815260206004820152603160248201527f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360448201527032903a393c9030b3b0b4b7103630ba32b960791b6064820152608401610182565b600154471161028c5760405162461bcd60e51b815260206004820152602d60248201527f4e6f7420656e6f7567682066756e647320696e20746865206661756365742e2060448201526c506c6561736520646f6e61746560981b6064820152608401610182565b6001546040516001600160a01b0383169180156108fc02916000818181858888f193505050501580156102c3573d6000803e3d6000fd5b506102d142620151806103aa565b3360009081526002602052604090205550565b6000546001600160a01b0316331461030e5760405162461bcd60e51b815260040161018290610368565b600155565b6001600160a01b038116811461032857600080fd5b50565b60006020828403121561033d57600080fd5b813561034881610313565b9392505050565b60006020828403121561036157600080fd5b5035919050565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604082015261371760f11b606082015260800190565b600082198211156103cb57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122007b53caea8689bc2cf63ff7937356fb457fd9178bc58646ee627cec2490d0a3a64736f6c634300080d0033",
  "bytecodeSha1": "924665a5b1dde54004ea98be069317578b7138fb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Faucet",
  "coverageMap": {
    "branches": {
      "0": {
        "Faucet.requestTokens": {
          "6": [
            1355,
            1393,
            true
          ],
          "7": [
            1465,
            1502,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Faucet.requestTokens": {
          "1": [
            1347,
            1447
          ],
          "2": [
            1457,
            1552
          ],
          "3": [
            1653,
            1687
          ],
          "4": [
            1749,
            1796
          ]
        },
        "Faucet.setAmountallowed": {
          "5": [
            1000,
            1032
          ]
        },
        "Faucet.setOwner": {
          "0": [
            798,
            814
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100aa5780639ad2cd14146100e7578063a4beda631461010b578063f3aa52a11461013857600080fd5b806313af403514610075578063580f390414610097578063605e73cd14610095575b600080fd5b34801561008157600080fd5b5061009561009036600461032b565b610158565b005b6100956100a536600461032b565b6101ad565b3480156100b657600080fd5b506000546100ca906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f357600080fd5b506100fd60015481565b6040519081526020016100de565b34801561011757600080fd5b506100fd61012636600461032b565b60026020526000908152604090205481565b34801561014457600080fd5b5061009561015336600461034f565b6102e4565b6000546001600160a01b0316331461018b5760405162461bcd60e51b815260040161018290610368565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526002602052604090205442116102255760405162461bcd60e51b815260206004820152603160248201527f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360448201527032903a393c9030b3b0b4b7103630ba32b960791b6064820152608401610182565b600154471161028c5760405162461bcd60e51b815260206004820152602d60248201527f4e6f7420656e6f7567682066756e647320696e20746865206661756365742e2060448201526c506c6561736520646f6e61746560981b6064820152608401610182565b6001546040516001600160a01b0383169180156108fc02916000818181858888f193505050501580156102c3573d6000803e3d6000fd5b506102d142620151806103aa565b3360009081526002602052604090205550565b6000546001600160a01b0316331461030e5760405162461bcd60e51b815260040161018290610368565b600155565b6001600160a01b038116811461032857600080fd5b50565b60006020828403121561033d57600080fd5b813561034881610313565b9392505050565b60006020828403121561036157600080fd5b5035919050565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604082015261371760f11b606082015260800190565b600082198211156103cb57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122007b53caea8689bc2cf63ff7937356fb457fd9178bc58646ee627cec2490d0a3a64736f6c634300080d0033",
  "deployedSourceMap": "78:1727:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:86;;;;;;;;;;-1:-1:-1;735:86:0;;;;;:::i;:::-;;:::i;:::-;;1205:598;;;;;;:::i;:::-;;:::i;179:20::-;;;;;;;;;;-1:-1:-1;179:20:0;;;;-1:-1:-1;;;;;179:20:0;;;;;;-1:-1:-1;;;;;826:32:1;;;808:51;;796:2;781:18;179:20:0;;;;;;;;205:47;;;;;;;;;;;;;;;;;;;1016:25:1;;;1004:2;989:18;205:47:0;870:177:1;365:40:0;;;;;;;;;;-1:-1:-1;365:40:0;;;;;:::i;:::-;;;;;;;;;;;;;;924:115;;;;;;;;;;-1:-1:-1;924:115:0;;;;;:::i;:::-;;:::i;735:86::-;574:5;;-1:-1:-1;;;;;574:5:0;560:10;:19;552:66;;;;-1:-1:-1;;;552:66:0;;;;;;;:::i;:::-;;;;;;;;;798:5:::1;:16:::0;;-1:-1:-1;;;;;;798:16:0::1;-1:-1:-1::0;;;;;798:16:0;;;::::1;::::0;;;::::1;::::0;;735:86::o;1205:598::-;1382:10;1373:20;;;;:8;:20;;;;;;1355:15;:38;1347:100;;;;-1:-1:-1;;;1347:100:0;;1842:2:1;1347:100:0;;;1824:21:1;1881:2;1861:18;;;1854:30;1920:34;1900:18;;;1893:62;-1:-1:-1;;;1971:18:1;;;1964:47;2028:19;;1347:100:0;1640:413:1;1347:100:0;1489:13;;1465:21;:37;1457:95;;;;-1:-1:-1;;;1457:95:0;;2260:2:1;1457:95:0;;;2242:21:1;2299:2;2279:18;;;2272:30;2338:34;2318:18;;;2311:62;-1:-1:-1;;;2389:18:1;;;2382:43;2442:19;;1457:95:0;2058:409:1;1457:95:0;1673:13;;1653:34;;-1:-1:-1;;;;;1653:19:0;;;:34;;;;;;;;;1673:13;1653:19;:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1772:24:0;:15;1790:6;1772:24;:::i;:::-;1758:10;1749:20;;;;:8;:20;;;;;:47;-1:-1:-1;1205:598:0:o;924:115::-;574:5;;-1:-1:-1;;;;;574:5:0;560:10;:19;552:66;;;;-1:-1:-1;;;552:66:0;;;;;;;:::i;:::-;1000:13:::1;:32:::0;924:115::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:1:o;1052:180::-;1111:6;1164:2;1152:9;1143:7;1139:23;1135:32;1132:52;;;1180:1;1177;1170:12;1132:52;-1:-1:-1;1203:23:1;;1052:180;-1:-1:-1;1052:180:1:o;1237:398::-;1439:2;1421:21;;;1478:2;1458:18;;;1451:30;1517:34;1512:2;1497:18;;1490:62;-1:-1:-1;;;1583:2:1;1568:18;;1561:32;1625:3;1610:19;;1237:398::o;2472:225::-;2512:3;2543:1;2539:6;2536:1;2533:13;2530:136;;;2588:10;2583:3;2579:20;2576:1;2569:31;2623:4;2620:1;2613:15;2651:4;2648:1;2641:15;2530:136;-1:-1:-1;2682:9:1;;2472:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    78,
    1805
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x9AD2CD14 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA4BEDA63 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xF3AA52A1 EQ PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x580F3904 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x605E73CD EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x1AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xCA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x34F JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F636B2074696D6520686173206E6F7420657870697265642E20506C656173 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x32903A393C9030B3B0B4B7103630BA32B9 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x182 JUMP JUMPDEST PUSH1 0x1 SLOAD SELFBALANCE GT PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320696E20746865206661756365742E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x506C6561736520646F6E617465 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x182 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2D1 TIMESTAMP PUSH3 0x15180 PUSH2 0x3AA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x348 DUP2 PUSH2 0x313 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xB5 EXTCODECOPY 0xAE 0xA8 PUSH9 0x9BC2CF63FF7937356F 0xB4 JUMPI REVERT SWAP2 PUSH25 0xBC58646EE627CEC2490D0A3A64736F6C634300080D00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        78,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "36": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "40": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9AD2CD14"
    },
    "47": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "51": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA4BEDA63"
    },
    "58": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B"
    },
    "62": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF3AA52A1"
    },
    "69": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138"
    },
    "73": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "REVERT",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13AF4035"
    },
    "85": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "EQ",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x580F3904"
    },
    "96": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "100": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x605E73CD"
    },
    "107": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "111": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        78,
        1805
      ],
      "op": "REVERT",
      "path": "0"
    },
    "117": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "118": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "119": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "121": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81"
    },
    "124": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "127": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "DUP1",
      "path": "0"
    },
    "128": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "REVERT",
      "path": "0"
    },
    "129": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "130": {
      "op": "POP"
    },
    "131": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "134": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90"
    },
    "137": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "138": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "140": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "143": {
      "fn": "Faucet.setOwner",
      "jump": "i",
      "offset": [
        735,
        821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "144": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "145": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "148": {
      "fn": "Faucet.setOwner",
      "jump": "i",
      "offset": [
        735,
        821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "149": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "STOP",
      "path": "0"
    },
    "151": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "155": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5"
    },
    "158": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "159": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "161": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "164": {
      "fn": "Faucet.requestTokens",
      "jump": "i",
      "offset": [
        1205,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "165": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "166": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD"
    },
    "169": {
      "fn": "Faucet.requestTokens",
      "jump": "i",
      "offset": [
        1205,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "170": {
      "offset": [
        179,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "171": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "172": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "174": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "177": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "180": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "181": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "REVERT",
      "path": "0"
    },
    "182": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "op": "POP"
    },
    "184": {
      "offset": [
        179,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "186": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "187": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA"
    },
    "190": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "op": "SUB"
    },
    "199": {
      "offset": [
        179,
        199
      ],
      "op": "AND",
      "path": "0"
    },
    "200": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "201": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "202": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "203": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "205": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "212": {
      "op": "SHL"
    },
    "213": {
      "op": "SUB"
    },
    "214": {
      "op": "SWAP1"
    },
    "215": {
      "op": "SWAP2"
    },
    "216": {
      "op": "AND"
    },
    "217": {
      "op": "DUP2"
    },
    "218": {
      "op": "MSTORE"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "221": {
      "op": "ADD"
    },
    "222": {
      "offset": [
        179,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "225": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "226": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "227": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "228": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "SUB",
      "path": "0"
    },
    "229": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "230": {
      "fn": "Faucet.requestTokens",
      "offset": [
        179,
        199
      ],
      "op": "RETURN",
      "path": "0"
    },
    "231": {
      "offset": [
        205,
        252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "233": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "234": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "235": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "238": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "239": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "241": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "242": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "REVERT",
      "path": "0"
    },
    "243": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "POP",
      "path": "0"
    },
    "245": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "248": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "250": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "251": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "252": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "JUMP",
      "path": "0"
    },
    "253": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "254": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "256": {
      "fn": "Faucet.requestTokens",
      "offset": [
        205,
        252
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "257": {
      "op": "SWAP1"
    },
    "258": {
      "op": "DUP2"
    },
    "259": {
      "op": "MSTORE"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "262": {
      "op": "ADD"
    },
    "263": {
      "offset": [
        205,
        252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "266": {
      "op": "JUMP"
    },
    "267": {
      "offset": [
        365,
        405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "268": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "269": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "DUP1",
      "path": "0"
    },
    "270": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "271": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "274": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "275": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "277": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "DUP1",
      "path": "0"
    },
    "278": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "REVERT",
      "path": "0"
    },
    "279": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "op": "POP"
    },
    "281": {
      "offset": [
        365,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "284": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126"
    },
    "287": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "288": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "290": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "293": {
      "fn": "Faucet.requestTokens",
      "jump": "i",
      "offset": [
        365,
        405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "294": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "295": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "297": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "299": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "300": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "302": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "303": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "304": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "305": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "307": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "308": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "309": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "310": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "311": {
      "fn": "Faucet.requestTokens",
      "offset": [
        365,
        405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "312": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "313": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "314": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "315": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "316": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "319": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "320": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "322": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "323": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "REVERT",
      "path": "0"
    },
    "324": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "op": "POP"
    },
    "326": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "329": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "332": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "333": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "335": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34F"
    },
    "338": {
      "fn": "Faucet.setAmountallowed",
      "jump": "i",
      "offset": [
        924,
        1039
      ],
      "op": "JUMP",
      "path": "0"
    },
    "339": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E4"
    },
    "343": {
      "fn": "Faucet.setAmountallowed",
      "jump": "i",
      "offset": [
        924,
        1039
      ],
      "op": "JUMP",
      "path": "0"
    },
    "344": {
      "fn": "Faucet.setOwner",
      "offset": [
        735,
        821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "offset": [
        574,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "347": {
      "fn": "Faucet.setOwner",
      "offset": [
        574,
        579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "354": {
      "op": "SHL"
    },
    "355": {
      "op": "SUB"
    },
    "356": {
      "offset": [
        574,
        579
      ],
      "op": "AND",
      "path": "0"
    },
    "357": {
      "offset": [
        560,
        570
      ],
      "op": "CALLER",
      "path": "0"
    },
    "358": {
      "offset": [
        560,
        579
      ],
      "op": "EQ",
      "path": "0"
    },
    "359": {
      "offset": [
        552,
        618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B"
    },
    "362": {
      "offset": [
        552,
        618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "363": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "365": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "offset": [
        552,
        618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "374": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "375": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "377": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "ADD",
      "path": "0"
    },
    "378": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "381": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "382": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x368"
    },
    "385": {
      "fn": "Faucet.setOwner",
      "jump": "i",
      "offset": [
        552,
        618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "386": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "387": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "389": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "390": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "391": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "392": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "SUB",
      "path": "0"
    },
    "393": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "394": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "395": {
      "fn": "Faucet.setOwner",
      "offset": [
        552,
        618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "396": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        803
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "398": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "399": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "op": "NOT"
    },
    "409": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "AND",
      "path": "0"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "416": {
      "op": "SHL"
    },
    "417": {
      "op": "SUB"
    },
    "418": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "419": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "420": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "421": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "AND",
      "path": "0"
    },
    "422": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "423": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "425": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "OR",
      "path": "0"
    },
    "426": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "427": {
      "fn": "Faucet.setOwner",
      "offset": [
        798,
        814
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "428": {
      "fn": "Faucet.setOwner",
      "jump": "o",
      "offset": [
        735,
        821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "429": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1205,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "430": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1382,
        1392
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "431": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "433": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "434": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "435": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "436": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "438": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "440": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "441": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "443": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "444": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "445": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1373,
        1393
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "446": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1355,
        1370
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "447": {
      "branch": 6,
      "fn": "Faucet.requestTokens",
      "offset": [
        1355,
        1393
      ],
      "op": "GT",
      "path": "0"
    },
    "448": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "451": {
      "branch": 6,
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "452": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "454": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "461": {
      "op": "SHL"
    },
    "462": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "DUP2",
      "path": "0"
    },
    "463": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "466": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "468": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "DUP3",
      "path": "0"
    },
    "469": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "ADD",
      "path": "0"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "475": {
      "op": "DUP3"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "op": "MSTORE"
    },
    "478": {
      "op": "PUSH32",
      "value": "0x6C6F636B2074696D6520686173206E6F7420657870697265642E20506C656173"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "513": {
      "op": "DUP3"
    },
    "514": {
      "op": "ADD"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "PUSH17",
      "value": "0x32903A393C9030B3B0B4B7103630BA32B9"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "539": {
      "op": "DUP3"
    },
    "540": {
      "op": "ADD"
    },
    "541": {
      "op": "MSTORE"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "544": {
      "op": "ADD"
    },
    "545": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "548": {
      "op": "JUMP"
    },
    "549": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1347,
        1447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1489,
        1502
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "552": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1489,
        1502
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "553": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1465,
        1486
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "554": {
      "branch": 7,
      "fn": "Faucet.requestTokens",
      "offset": [
        1465,
        1502
      ],
      "op": "GT",
      "path": "0"
    },
    "555": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "558": {
      "branch": 7,
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "559": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "561": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "DUP2",
      "path": "0"
    },
    "570": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "573": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "575": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "DUP3",
      "path": "0"
    },
    "576": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "ADD",
      "path": "0"
    },
    "577": {
      "op": "MSTORE"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "582": {
      "op": "DUP3"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682066756E647320696E20746865206661756365742E20"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "620": {
      "op": "DUP3"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "op": "MSTORE"
    },
    "623": {
      "op": "PUSH13",
      "value": "0x506C6561736520646F6E617465"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "642": {
      "op": "DUP3"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "651": {
      "op": "JUMP"
    },
    "652": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1457,
        1552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "653": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1673,
        1686
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "655": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1673,
        1686
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "656": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "658": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "665": {
      "op": "SHL"
    },
    "666": {
      "op": "SUB"
    },
    "667": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "668": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1672
      ],
      "op": "AND",
      "path": "0"
    },
    "669": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "670": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "DUP1",
      "path": "0"
    },
    "671": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "672": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "675": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "MUL",
      "path": "0"
    },
    "676": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "677": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "679": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "680": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "681": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "682": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1673,
        1686
      ],
      "op": "DUP6",
      "path": "0"
    },
    "683": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1672
      ],
      "op": "DUP9",
      "path": "0"
    },
    "684": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "DUP9",
      "path": "0"
    },
    "685": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "CALL",
      "path": "0"
    },
    "686": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "687": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "POP",
      "path": "0"
    },
    "688": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "POP",
      "path": "0"
    },
    "689": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "POP",
      "path": "0"
    },
    "690": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "POP",
      "path": "0"
    },
    "691": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "692": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "694": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C3"
    },
    "697": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "698": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "699": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "701": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "DUP1",
      "path": "0"
    },
    "702": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "703": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "704": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "706": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "REVERT",
      "path": "0"
    },
    "707": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1653,
        1687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "708": {
      "op": "POP"
    },
    "709": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1772,
        1796
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x2D1"
    },
    "712": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1772,
        1787
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "713": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1790,
        1796
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15180"
    },
    "717": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1772,
        1796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AA"
    },
    "720": {
      "fn": "Faucet.requestTokens",
      "jump": "i",
      "offset": [
        1772,
        1796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "721": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1772,
        1796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1758,
        1768
      ],
      "op": "CALLER",
      "path": "0"
    },
    "723": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "725": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "726": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "DUP2",
      "path": "0"
    },
    "727": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "728": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "730": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "732": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "733": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "735": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "736": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1769
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "737": {
      "fn": "Faucet.requestTokens",
      "offset": [
        1749,
        1796
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "fn": "Faucet.requestTokens",
      "jump": "o",
      "offset": [
        1205,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "740": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        924,
        1039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "741": {
      "offset": [
        574,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "743": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        574,
        579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "750": {
      "op": "SHL"
    },
    "751": {
      "op": "SUB"
    },
    "752": {
      "offset": [
        574,
        579
      ],
      "op": "AND",
      "path": "0"
    },
    "753": {
      "offset": [
        560,
        570
      ],
      "op": "CALLER",
      "path": "0"
    },
    "754": {
      "offset": [
        560,
        579
      ],
      "op": "EQ",
      "path": "0"
    },
    "755": {
      "offset": [
        552,
        618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30E"
    },
    "758": {
      "offset": [
        552,
        618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "759": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "761": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "offset": [
        552,
        618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "770": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "771": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "773": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "ADD",
      "path": "0"
    },
    "774": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "777": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "778": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x368"
    },
    "781": {
      "fn": "Faucet.setAmountallowed",
      "jump": "i",
      "offset": [
        552,
        618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "782": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        552,
        618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "783": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        1000,
        1013
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x1"
    },
    "785": {
      "fn": "Faucet.setAmountallowed",
      "offset": [
        1000,
        1032
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "786": {
      "fn": "Faucet.setAmountallowed",
      "jump": "o",
      "offset": [
        924,
        1039
      ],
      "op": "JUMP",
      "path": "0"
    },
    "787": {
      "op": "JUMPDEST"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "op": "DUP2"
    },
    "797": {
      "op": "AND"
    },
    "798": {
      "op": "DUP2"
    },
    "799": {
      "op": "EQ"
    },
    "800": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "803": {
      "op": "JUMPI"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "806": {
      "op": "DUP1"
    },
    "807": {
      "op": "REVERT"
    },
    "808": {
      "op": "JUMPDEST"
    },
    "809": {
      "op": "POP"
    },
    "810": {
      "jump": "o",
      "op": "JUMP"
    },
    "811": {
      "op": "JUMPDEST"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "816": {
      "op": "DUP3"
    },
    "817": {
      "op": "DUP5"
    },
    "818": {
      "op": "SUB"
    },
    "819": {
      "op": "SLT"
    },
    "820": {
      "op": "ISZERO"
    },
    "821": {
      "op": "PUSH2",
      "value": "0x33D"
    },
    "824": {
      "op": "JUMPI"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "827": {
      "op": "DUP1"
    },
    "828": {
      "op": "REVERT"
    },
    "829": {
      "op": "JUMPDEST"
    },
    "830": {
      "op": "DUP2"
    },
    "831": {
      "op": "CALLDATALOAD"
    },
    "832": {
      "op": "PUSH2",
      "value": "0x348"
    },
    "835": {
      "op": "DUP2"
    },
    "836": {
      "op": "PUSH2",
      "value": "0x313"
    },
    "839": {
      "jump": "i",
      "op": "JUMP"
    },
    "840": {
      "op": "JUMPDEST"
    },
    "841": {
      "op": "SWAP4"
    },
    "842": {
      "op": "SWAP3"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "jump": "o",
      "op": "JUMP"
    },
    "847": {
      "op": "JUMPDEST"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "852": {
      "op": "DUP3"
    },
    "853": {
      "op": "DUP5"
    },
    "854": {
      "op": "SUB"
    },
    "855": {
      "op": "SLT"
    },
    "856": {
      "op": "ISZERO"
    },
    "857": {
      "op": "PUSH2",
      "value": "0x361"
    },
    "860": {
      "op": "JUMPI"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "863": {
      "op": "DUP1"
    },
    "864": {
      "op": "REVERT"
    },
    "865": {
      "op": "JUMPDEST"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "op": "CALLDATALOAD"
    },
    "868": {
      "op": "SWAP2"
    },
    "869": {
      "op": "SWAP1"
    },
    "870": {
      "op": "POP"
    },
    "871": {
      "jump": "o",
      "op": "JUMP"
    },
    "872": {
      "op": "JUMPDEST"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "875": {
      "op": "DUP1"
    },
    "876": {
      "op": "DUP3"
    },
    "877": {
      "op": "MSTORE"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "880": {
      "op": "SWAP1"
    },
    "881": {
      "op": "DUP3"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "930": {
      "op": "DUP3"
    },
    "931": {
      "op": "ADD"
    },
    "932": {
      "op": "MSTORE"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "SWAP1"
    },
    "937": {
      "jump": "o",
      "op": "JUMP"
    },
    "938": {
      "op": "JUMPDEST"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "941": {
      "op": "DUP3"
    },
    "942": {
      "op": "NOT"
    },
    "943": {
      "op": "DUP3"
    },
    "944": {
      "op": "GT"
    },
    "945": {
      "op": "ISZERO"
    },
    "946": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "949": {
      "op": "JUMPI"
    },
    "950": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "960": {
      "op": "MSTORE"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "970": {
      "op": "REVERT"
    },
    "971": {
      "op": "JUMPDEST"
    },
    "972": {
      "op": "POP"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "SWAP1"
    },
    "975": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "af4ef250d4a7174f276ccee4c68a7c59ac5e31d9",
  "source": "pragma solidity ^0.8.3;\n\n\n/*\nThis code is adapted from Crypto Market Pool.\n*/\ncontract Faucet {\n\t\n\n    //state variable to keep track of owner and amount of ETHER to dispense\n    address public owner;\n    uint public amountAllowed = 1000000000000000000;\n\n\n    //mapping to keep track of requested rokens\n    //Address and blocktime + 1 day is saved in TimeLock\n    mapping(address => uint) public lockTime;\n\n\n    //constructor to set the owner\n\tconstructor() payable {\n\t\towner = msg.sender;\n\t}\n\n    //function modifier\n    modifier onlyOwner {\n        require(msg.sender == owner, \"Only owner can call this function.\");\n        _; \n    }\n\n\n    //function to change the owner.  Only the owner of the contract can call this function\n    function setOwner(address newOwner) public onlyOwner {\n        owner = newOwner;\n    }\n\n\n    //function to set the amount allowable to be claimed. Only the owner can call this function\n    function setAmountallowed(uint newAmountAllowed) public onlyOwner {\n        amountAllowed = newAmountAllowed;\n    }\n\n\n    //function to donate funds to the faucet contract\n\tfunction donateTofaucet() public payable {\n\t}\n\n\n    //function to send tokens from faucet to an address\n    function requestTokens(address payable _requestor) public payable {\n\n        //perform a few checks to make sure function can execute\n        require(block.timestamp > lockTime[msg.sender], \"lock time has not expired. Please try again later\");\n        require(address(this).balance > amountAllowed, \"Not enough funds in the faucet. Please donate\");\n\n        //if the balance of this contract is greater then the requested amount send funds\n        _requestor.transfer(amountAllowed);        \n \n        //updates locktime 1 day from now\n        lockTime[msg.sender] = block.timestamp + 1 days;\n    }\n}",
  "sourceMap": "78:1727:0:-:0;;;233:19;205:47;;471:5;:18;;-1:-1:-1;;;;;;471:18:0;479:10;471:18;;;78:1727;;;;;;",
  "sourcePath": "contracts/Faucet.sol",
  "type": "contract"
}