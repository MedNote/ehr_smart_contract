{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAuthorized",
          "type": "bool"
        }
      ],
      "name": "DoctorAuth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "DoctorCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "MedicalRecordUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_viewer",
          "type": "address"
        }
      ],
      "name": "MedicalRecordView",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "PatientCreation",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctorAddress",
          "type": "address"
        }
      ],
      "name": "authorizeDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_lastName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_doctorAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_doctorPublicKey",
          "type": "bytes"
        }
      ],
      "name": "createDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_lastName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_patientAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_patientPublicKey",
          "type": "bytes"
        }
      ],
      "name": "createPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctorAddress",
          "type": "address"
        }
      ],
      "name": "deauthorizeDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_patientAddress",
          "type": "address"
        }
      ],
      "name": "doctorAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctorAddress",
          "type": "address"
        }
      ],
      "name": "doctorExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubkey",
          "type": "bytes"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patientAddress",
          "type": "address"
        }
      ],
      "name": "patientExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messagehash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "recoverPublicAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "splitSignature",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patientAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "updateRecordHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/EHR.sol"
  },
  "ast": {
    "absolutePath": "contracts/EHR.sol",
    "exportedSymbols": {
      "EHR": [
        495
      ]
    },
    "id": 496,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EHR",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 495,
        "linearizedBaseContracts": [
          495
        ],
        "name": "EHR",
        "nameLocation": "42:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "patientCount",
            "nameLocation": "58:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 495,
            "src": "53:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "53:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "73:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "doctorCount",
            "nameLocation": "85:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 495,
            "src": "80:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "80:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "99:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "EHR.Patient",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "firstName",
                "nameLocation": "139:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "132:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "132:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "lastName",
                "nameLocation": "165:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "158:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "158:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "pubKey",
                "nameLocation": "223:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "217:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 13,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "217:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "authorized",
                "nameLocation": "329:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "303:36:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 18,
                  "keyType": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "303:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 17,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "354:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "349:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "349:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nameLocation": "115:7:0",
            "nodeType": "StructDefinition",
            "scope": 495,
            "src": "108:258:0",
            "visibility": "public"
          },
          {
            "canonicalName": "EHR.Doctor",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "firstName",
                "nameLocation": "402:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "395:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 23,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "lastName",
                "nameLocation": "428:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "421:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 25,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "421:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "pubKey",
                "nameLocation": "485:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "479:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 28,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "479:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "506:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "501:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "501:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Doctor",
            "nameLocation": "379:6:0",
            "nodeType": "StructDefinition",
            "scope": 495,
            "src": "372:146:0",
            "visibility": "public"
          },
          {
            "canonicalName": "EHR.MedicalRecord",
            "id": 41,
            "members": [
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "doctorAddress",
                "nameLocation": "620:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "612:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "691:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "683:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 37,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "683:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "710:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "705:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 39,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "705:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MedicalRecord",
            "nameLocation": "531:13:0",
            "nodeType": "StructDefinition",
            "scope": 495,
            "src": "524:198:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 42,
              "nodeType": "StructuredDocumentation",
              "src": "732:58:0",
              "text": "associate patient's wallet address with Patient struct"
            },
            "id": 47,
            "mutability": "mutable",
            "name": "patients",
            "nameLocation": "824:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 495,
            "src": "795:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
              "typeString": "mapping(address => struct EHR.Patient)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "804:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "795:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                "typeString": "mapping(address => struct EHR.Patient)"
              },
              "valueType": {
                "id": 45,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 44,
                  "name": "Patient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22,
                  "src": "815:7:0"
                },
                "referencedDeclaration": 22,
                "src": "815:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$22_storage_ptr",
                  "typeString": "struct EHR.Patient"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "838:56:0",
              "text": "associate doctot's wallet address with Doctor struct"
            },
            "id": 53,
            "mutability": "mutable",
            "name": "doctors",
            "nameLocation": "927:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 495,
            "src": "899:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
              "typeString": "mapping(address => struct EHR.Doctor)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "908:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "899:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                "typeString": "mapping(address => struct EHR.Doctor)"
              },
              "valueType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "Doctor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "919:6:0"
                },
                "referencedDeclaration": 32,
                "src": "919:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Doctor_$32_storage_ptr",
                  "typeString": "struct EHR.Doctor"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 54,
              "nodeType": "StructuredDocumentation",
              "src": "940:58:0",
              "text": "associate patient's wallet address with doctor address"
            },
            "id": 58,
            "mutability": "mutable",
            "name": "patientProviders",
            "nameLocation": "1032:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 495,
            "src": "1003:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1012:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1003:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 56,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1023:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "1054:57:0",
              "text": "associate patient's wallet address with MedicalRecord"
            },
            "id": 64,
            "mutability": "mutable",
            "name": "records",
            "nameLocation": "1151:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 495,
            "src": "1116:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalRecord_$41_storage_$",
              "typeString": "mapping(address => struct EHR.MedicalRecord)"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1125:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1116:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalRecord_$41_storage_$",
                "typeString": "mapping(address => struct EHR.MedicalRecord)"
              },
              "valueType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "MedicalRecord",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "1136:13:0"
                },
                "referencedDeclaration": 41,
                "src": "1136:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MedicalRecord_$41_storage_ptr",
                  "typeString": "struct EHR.MedicalRecord"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "98d045482cdb3a3eb48eaffed7579d8339191329ff0088239dd97ac546d59cba",
            "id": 70,
            "name": "PatientCreation",
            "nameLocation": "1171:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_patient",
                  "nameLocation": "1203:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1187:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "1229:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1213:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:51:0"
            },
            "src": "1165:73:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4cd17b5d25f6ea7efaa933b18d886d9ebcb6b66e8a67f82a70a472bf1fc2004d",
            "id": 74,
            "name": "DoctorCreation",
            "nameLocation": "1249:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "1280:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1264:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1263:25:0"
            },
            "src": "1243:46:0"
          },
          {
            "anonymous": false,
            "eventSelector": "58efeaa91070e02fbcbc866786a01ab2d142a9df696ebcd9fd1515e0954377fd",
            "id": 82,
            "name": "DoctorAuth",
            "nameLocation": "1300:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_patient",
                  "nameLocation": "1327:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1311:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "1353:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1337:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAuthorized",
                  "nameLocation": "1367:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1362:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:70:0"
            },
            "src": "1294:87:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3b4404b3fddc20e67767c581b26d88305189b2f90c194687bc41c9de89d3c49c",
            "id": 88,
            "name": "MedicalRecordView",
            "nameLocation": "1392:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_patient",
                  "nameLocation": "1426:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1410:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_viewer",
                  "nameLocation": "1452:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1436:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1409:51:0"
            },
            "src": "1386:75:0"
          },
          {
            "anonymous": false,
            "eventSelector": "52a1a8c2bbb591f74f77c3f7385278292b931990f79db706fb8614520d8444a3",
            "id": 96,
            "name": "MedicalRecordUpdate",
            "nameLocation": "1472:19:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_patient",
                  "nameLocation": "1508:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1492:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_updator",
                  "nameLocation": "1534:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1518:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "1552:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1544:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1491:70:0"
            },
            "src": "1466:96:0"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1762:741:0",
              "statements": [
                {
                  "documentation": "only allow doctors to create patients, and patient can't already exist",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 108,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "1863:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                                "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                              }
                            },
                            "id": 111,
                            "indexExpression": {
                              "expression": {
                                "id": 109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1871:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1871:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1863:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$32_storage",
                              "typeString": "struct EHR.Doctor storage ref"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "1863:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1892:32:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 113,
                                "name": "patients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1893:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                  "typeString": "mapping(address => struct EHR.Patient storage ref)"
                                }
                              },
                              "id": 115,
                              "indexExpression": {
                                "id": 114,
                                "name": "_patientAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102,
                                "src": "1902:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1893:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Patient_$22_storage",
                                "typeString": "struct EHR.Patient storage ref"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "valid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "1893:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1863:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1855:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1855:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:70:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 121,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1935:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                            "typeString": "mapping(address => struct EHR.Patient storage ref)"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "id": 122,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1944:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1935:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$22_storage",
                          "typeString": "struct EHR.Patient storage ref"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1935:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_firstName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1973:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1935:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:48:0"
                },
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 128,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1993:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                            "typeString": "mapping(address => struct EHR.Patient storage ref)"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "id": 129,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2002:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1993:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$22_storage",
                          "typeString": "struct EHR.Patient storage ref"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1993:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 132,
                      "name": "_lastName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "2030:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1993:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:46:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 135,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2049:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                            "typeString": "mapping(address => struct EHR.Patient storage ref)"
                          }
                        },
                        "id": 137,
                        "indexExpression": {
                          "id": 136,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2058:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2049:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$22_storage",
                          "typeString": "struct EHR.Patient storage ref"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2049:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 139,
                      "name": "_patientPublicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2084:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2049:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2049:52:0"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 142,
                            "name": "patients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "2111:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                              "typeString": "mapping(address => struct EHR.Patient storage ref)"
                            }
                          },
                          "id": 144,
                          "indexExpression": {
                            "id": 143,
                            "name": "_patientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "2120:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2111:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Patient_$22_storage",
                            "typeString": "struct EHR.Patient storage ref"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "2111:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2148:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2148:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2111:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2162:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2111:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:55:0"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 152,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2176:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                            "typeString": "mapping(address => struct EHR.Patient storage ref)"
                          }
                        },
                        "id": 154,
                        "indexExpression": {
                          "id": 153,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2185:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2176:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$22_storage",
                          "typeString": "struct EHR.Patient storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2176:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2210:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2176:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:38:0"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 159,
                          "name": "records",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2224:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalRecord_$41_storage_$",
                            "typeString": "mapping(address => struct EHR.MedicalRecord storage ref)"
                          }
                        },
                        "id": 161,
                        "indexExpression": {
                          "id": 160,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2232:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2224:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MedicalRecord_$41_storage",
                          "typeString": "struct EHR.MedicalRecord storage ref"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "doctorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "2224:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 163,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2265:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2265:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2224:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:51:0"
                },
                {
                  "documentation": "hash of null data",
                  "expression": {
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 167,
                          "name": "records",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2315:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalRecord_$41_storage_$",
                            "typeString": "mapping(address => struct EHR.MedicalRecord storage ref)"
                          }
                        },
                        "id": 169,
                        "indexExpression": {
                          "id": 168,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2323:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2315:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MedicalRecord_$41_storage",
                          "typeString": "struct EHR.MedicalRecord storage ref"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "2315:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307865336230633434323938666331633134396166626634633839393666623932343237616534316534363439623933346361343935393931623738353262383535",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2347:66:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_102987336249554097029535212322581322789799900648198034993379397001115665086549_by_1",
                        "typeString": "int_const 1029...(70 digits omitted)...6549"
                      },
                      "value": "0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                    },
                    "src": "2315:98:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:98:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2423:14:0",
                    "subExpression": {
                      "id": 174,
                      "name": "patientCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "2423:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2423:14:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "_patientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2468:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2485:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2485:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 177,
                      "name": "PatientCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "2452:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2452:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "EmitStatement",
                  "src": "2447:49:0"
                }
              ]
            },
            "functionSelector": "f4863bed",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPatient",
            "nameLocation": "1578:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_firstName",
                  "nameLocation": "1615:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1601:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_lastName",
                  "nameLocation": "1650:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1636:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_patientAddress",
                  "nameLocation": "1678:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1670:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_patientPublicKey",
                  "nameLocation": "1717:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1704:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1591:149:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:0"
            },
            "scope": 495,
            "src": "1569:934:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "2698:415:0",
              "statements": [
                {
                  "documentation": "only admin can create doctor, and doctor must not already exist",
                  "expression": {
                    "arguments": [
                      {
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2792:30:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 196,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2793:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                                "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                              }
                            },
                            "id": 198,
                            "indexExpression": {
                              "id": 197,
                              "name": "_doctorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "2801:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2793:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$32_storage",
                              "typeString": "struct EHR.Doctor storage ref"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2793:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2784:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2784:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "2784:39:0"
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 203,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2833:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                            "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                          }
                        },
                        "id": 205,
                        "indexExpression": {
                          "id": 204,
                          "name": "_doctorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "2841:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2833:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$32_storage",
                          "typeString": "struct EHR.Doctor storage ref"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "2833:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 207,
                      "name": "_firstName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "2869:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2833:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:46:0"
                },
                {
                  "expression": {
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 210,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2889:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                            "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                          }
                        },
                        "id": 212,
                        "indexExpression": {
                          "id": 211,
                          "name": "_doctorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "2897:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2889:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$32_storage",
                          "typeString": "struct EHR.Doctor storage ref"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "2889:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 214,
                      "name": "_lastName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "2924:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2889:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:44:0"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 217,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2943:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                            "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                          }
                        },
                        "id": 219,
                        "indexExpression": {
                          "id": 218,
                          "name": "_doctorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "2951:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2943:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$32_storage",
                          "typeString": "struct EHR.Doctor storage ref"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "2943:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 221,
                      "name": "_doctorPublicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "2976:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2943:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:49:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 224,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "3002:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                            "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                          }
                        },
                        "id": 226,
                        "indexExpression": {
                          "id": 225,
                          "name": "_doctorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3010:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3002:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$32_storage",
                          "typeString": "struct EHR.Doctor storage ref"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3002:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3034:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3002:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:36:0"
                },
                {
                  "expression": {
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3048:13:0",
                    "subExpression": {
                      "id": 231,
                      "name": "doctorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3048:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:13:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 235,
                        "name": "_doctorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "3091:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 234,
                      "name": "DoctorCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "3076:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "EmitStatement",
                  "src": "3071:35:0"
                }
              ]
            },
            "functionSelector": "b163b365",
            "id": 239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDoctor",
            "nameLocation": "2518:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_firstName",
                  "nameLocation": "2554:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2540:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_lastName",
                  "nameLocation": "2589:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2575:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_doctorAddress",
                  "nameLocation": "2617:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2609:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_doctorPublicKey",
                  "nameLocation": "2655:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2642:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2530:147:0"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2698:0:0"
            },
            "scope": 495,
            "src": "2509:604:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "3179:398:0",
              "statements": [
                {
                  "documentation": "doctor should exist and patient should exist and doctor shouldn't already have authorization",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 245,
                                "name": "doctors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "3302:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                                  "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                                }
                              },
                              "id": 247,
                              "indexExpression": {
                                "id": 246,
                                "name": "_doctorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 241,
                                "src": "3310:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3302:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Doctor_$32_storage",
                                "typeString": "struct EHR.Doctor storage ref"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "valid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "3302:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 249,
                                "name": "patients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "3352:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                  "typeString": "mapping(address => struct EHR.Patient storage ref)"
                                }
                              },
                              "id": 252,
                              "indexExpression": {
                                "expression": {
                                  "id": 250,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3361:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3361:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3352:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Patient_$22_storage",
                                "typeString": "struct EHR.Patient storage ref"
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "valid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "3352:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3302:76:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3398:48:0",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 255,
                                  "name": "patients",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "3399:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                    "typeString": "mapping(address => struct EHR.Patient storage ref)"
                                  }
                                },
                                "id": 258,
                                "indexExpression": {
                                  "expression": {
                                    "id": 256,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3408:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3408:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3399:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Patient_$22_storage",
                                  "typeString": "struct EHR.Patient storage ref"
                                }
                              },
                              "id": 259,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "authorized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "3399:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 261,
                            "indexExpression": {
                              "id": 260,
                              "name": "_doctorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "3431:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3399:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3302:144:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3294:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3294:153:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3294:153:0"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 266,
                            "name": "patients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "3457:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                              "typeString": "mapping(address => struct EHR.Patient storage ref)"
                            }
                          },
                          "id": 269,
                          "indexExpression": {
                            "expression": {
                              "id": 267,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3466:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3466:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3457:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Patient_$22_storage",
                            "typeString": "struct EHR.Patient storage ref"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "3457:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "id": 271,
                        "name": "_doctorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "3489:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3457:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3507:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3457:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3457:54:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3537:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3537:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 279,
                        "name": "_doctorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "3549:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3565:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 276,
                      "name": "DoctorAuth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3526:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "EmitStatement",
                  "src": "3521:49:0"
                }
              ]
            },
            "functionSelector": "58c9202c",
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeDoctor",
            "nameLocation": "3128:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "_doctorAddress",
                  "nameLocation": "3152:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "3144:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3143:24:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3179:0:0"
            },
            "scope": 495,
            "src": "3119:458:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "3645:389:0",
              "statements": [
                {
                  "documentation": "doctor should exist and patient should exist and doctor should have authorization",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 290,
                                "name": "doctors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "3757:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                                  "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                                }
                              },
                              "id": 292,
                              "indexExpression": {
                                "id": 291,
                                "name": "_doctorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "3765:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3757:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Doctor_$32_storage",
                                "typeString": "struct EHR.Doctor storage ref"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "valid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "3757:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 294,
                                "name": "patients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "3807:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                  "typeString": "mapping(address => struct EHR.Patient storage ref)"
                                }
                              },
                              "id": 297,
                              "indexExpression": {
                                "expression": {
                                  "id": 295,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3816:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3816:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3807:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Patient_$22_storage",
                                "typeString": "struct EHR.Patient storage ref"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "valid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "3807:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3757:76:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 300,
                                "name": "patients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "3854:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                  "typeString": "mapping(address => struct EHR.Patient storage ref)"
                                }
                              },
                              "id": 303,
                              "indexExpression": {
                                "expression": {
                                  "id": 301,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3863:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3863:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3854:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Patient_$22_storage",
                                "typeString": "struct EHR.Patient storage ref"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "authorized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "3854:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 306,
                          "indexExpression": {
                            "id": 305,
                            "name": "_doctorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "3886:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3854:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3757:144:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3749:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:153:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:153:0"
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 310,
                            "name": "patients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "3912:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                              "typeString": "mapping(address => struct EHR.Patient storage ref)"
                            }
                          },
                          "id": 313,
                          "indexExpression": {
                            "expression": {
                              "id": 311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3921:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3921:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3912:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Patient_$22_storage",
                            "typeString": "struct EHR.Patient storage ref"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "3912:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 316,
                      "indexExpression": {
                        "id": 315,
                        "name": "_doctorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3944:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3912:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3962:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3912:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:55:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 321,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3993:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3993:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 323,
                        "name": "_doctorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "4005:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4021:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 320,
                      "name": "DoctorAuth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3982:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3982:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "EmitStatement",
                  "src": "3977:50:0"
                }
              ]
            },
            "functionSelector": "5ab361ef",
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deauthorizeDoctor",
            "nameLocation": "3592:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_doctorAddress",
                  "nameLocation": "3618:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3610:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3609:24:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:0"
            },
            "scope": 495,
            "src": "3583:451:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "4113:330:0",
              "statements": [
                {
                  "documentation": "patient should exist and either (sender is patient) or (sender is doctor and doctor is authorized)",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 336,
                              "name": "patients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4242:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                "typeString": "mapping(address => struct EHR.Patient storage ref)"
                              }
                            },
                            "id": 338,
                            "indexExpression": {
                              "id": 337,
                              "name": "_patientAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 330,
                              "src": "4251:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4242:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$22_storage",
                              "typeString": "struct EHR.Patient storage ref"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "4242:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 340,
                                    "name": "patients",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "4278:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                      "typeString": "mapping(address => struct EHR.Patient storage ref)"
                                    }
                                  },
                                  "id": 343,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 341,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4287:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 342,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4287:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4278:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Patient_$22_storage",
                                    "typeString": "struct EHR.Patient storage ref"
                                  }
                                },
                                "id": 344,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "valid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21,
                                "src": "4278:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 357,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 345,
                                          "name": "doctors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 53,
                                          "src": "4309:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                                            "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                                          }
                                        },
                                        "id": 348,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 346,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "4317:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 347,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "4317:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4309:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Doctor_$32_storage",
                                          "typeString": "struct EHR.Doctor storage ref"
                                        }
                                      },
                                      "id": 349,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "valid",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 31,
                                      "src": "4309:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 350,
                                            "name": "patients",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47,
                                            "src": "4338:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                              "typeString": "mapping(address => struct EHR.Patient storage ref)"
                                            }
                                          },
                                          "id": 352,
                                          "indexExpression": {
                                            "id": 351,
                                            "name": "_patientAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 330,
                                            "src": "4347:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4338:25:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Patient_$22_storage",
                                            "typeString": "struct EHR.Patient storage ref"
                                          }
                                        },
                                        "id": 353,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "authorized",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 19,
                                        "src": "4338:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 356,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 354,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "4375:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 355,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "4375:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4338:48:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "4309:77:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 358,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4308:79:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4278:109:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 360,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4277:111:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4242:146:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4234:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4234:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4234:155:0"
                },
                {
                  "expression": {
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 364,
                          "name": "records",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "4399:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalRecord_$41_storage_$",
                            "typeString": "mapping(address => struct EHR.MedicalRecord storage ref)"
                          }
                        },
                        "id": 366,
                        "indexExpression": {
                          "id": 365,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "4407:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4399:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MedicalRecord_$41_storage",
                          "typeString": "struct EHR.MedicalRecord storage ref"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "4399:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 368,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "4431:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4399:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "4399:37:0"
                }
              ]
            },
            "functionSelector": "afd9a94c",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateRecordHash",
            "nameLocation": "4049:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "_patientAddress",
                  "nameLocation": "4074:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "4066:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "4099:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "4091:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4091:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4065:40:0"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4113:0:0"
            },
            "scope": 495,
            "src": "4040:403:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "4524:55:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 379,
                        "name": "patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "4541:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                          "typeString": "mapping(address => struct EHR.Patient storage ref)"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "id": 380,
                        "name": "_patientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "4550:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4541:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$22_storage",
                        "typeString": "struct EHR.Patient storage ref"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21,
                    "src": "4541:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 378,
                  "id": 383,
                  "nodeType": "Return",
                  "src": "4534:38:0"
                }
              ]
            },
            "functionSelector": "51710f03",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "patientExists",
            "nameLocation": "4458:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "_patientAddress",
                  "nameLocation": "4480:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "4472:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4472:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4471:25:0"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "4518:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4518:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4517:6:0"
            },
            "scope": 495,
            "src": "4449:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "4658:53:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 392,
                        "name": "doctors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4675:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                          "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                        }
                      },
                      "id": 394,
                      "indexExpression": {
                        "id": 393,
                        "name": "_doctorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "4683:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4675:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$32_storage",
                        "typeString": "struct EHR.Doctor storage ref"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "4675:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 391,
                  "id": 396,
                  "nodeType": "Return",
                  "src": "4668:36:0"
                }
              ]
            },
            "functionSelector": "2ad230a9",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doctorExists",
            "nameLocation": "4594:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_doctorAddress",
                  "nameLocation": "4615:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "4607:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4606:24:0"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "4652:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4652:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4651:6:0"
            },
            "scope": 495,
            "src": "4585:126:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "4819:159:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 408,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "4837:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$32_storage_$",
                                "typeString": "mapping(address => struct EHR.Doctor storage ref)"
                              }
                            },
                            "id": 410,
                            "indexExpression": {
                              "id": 409,
                              "name": "_doctorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "4845:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4837:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$32_storage",
                              "typeString": "struct EHR.Doctor storage ref"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "4837:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 412,
                              "name": "patients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4870:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                                "typeString": "mapping(address => struct EHR.Patient storage ref)"
                              }
                            },
                            "id": 414,
                            "indexExpression": {
                              "id": 413,
                              "name": "_patientAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "4879:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4870:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$22_storage",
                              "typeString": "struct EHR.Patient storage ref"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "4870:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4837:64:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4829:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4829:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4829:73:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 419,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "4919:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$22_storage_$",
                            "typeString": "mapping(address => struct EHR.Patient storage ref)"
                          }
                        },
                        "id": 421,
                        "indexExpression": {
                          "id": 420,
                          "name": "_patientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4928:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4919:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$22_storage",
                          "typeString": "struct EHR.Patient storage ref"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "4919:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 424,
                    "indexExpression": {
                      "id": 423,
                      "name": "_doctorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "4956:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4919:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 406,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "4912:59:0"
                }
              ]
            },
            "functionSelector": "b74be800",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doctorAuthorized",
            "nameLocation": "4726:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_doctorAddress",
                  "nameLocation": "4751:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "4743:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_patientAddress",
                  "nameLocation": "4775:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "4767:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4767:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4742:49:0"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "4813:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4813:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4812:6:0"
            },
            "scope": 495,
            "src": "4717:261:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "5055:68:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 441,
                                    "name": "pubkey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 429,
                                    "src": "5106:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 440,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "5096:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5096:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5088:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 438,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5088:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5088:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5080:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 436,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "5080:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5080:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5072:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5072:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5072:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 433,
                  "id": 446,
                  "nodeType": "Return",
                  "src": "5065:51:0"
                }
              ]
            },
            "functionSelector": "c47cf5de",
            "id": 448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "4993:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "pubkey",
                  "nameLocation": "5017:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "5004:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5004:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5003:21:0"
            },
            "returnParameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "5046:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5046:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5045:9:0"
            },
            "scope": 495,
            "src": "4984:139:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "5301:392:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 460,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "5319:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5319:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5339:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "5319:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5311:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5311:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "5311:31:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5362:298:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5432:30:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "5447:9:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5458:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5443:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5443:18:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5437:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5437:25:0"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "5432:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5507:30:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "5522:9:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5533:2:0",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5518:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5518:18:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5512:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5512:25:0"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "5507:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5611:39:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5621:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "5634:9:0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5645:2:0",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5630:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5630:18:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5624:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5624:25:0"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "5616:4:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5616:34:0"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "5611:1:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 455,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5432:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 457,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5507:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 450,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5447:9:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 450,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5522:9:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 450,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5634:9:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 453,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5611:1:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 466,
                  "nodeType": "InlineAssembly",
                  "src": "5353:307:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 467,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "5678:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 468,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5681:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 469,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "5684:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 470,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5677:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "functionReturnParameters": 458,
                  "id": 471,
                  "nodeType": "Return",
                  "src": "5670:16:0"
                }
              ]
            },
            "functionSelector": "a7bb5803",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "5198:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "5226:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "5213:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5213:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5212:24:0"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "5272:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "5266:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5266:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "5283:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "5275:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5275:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "5294:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "5286:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5286:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5265:31:0"
            },
            "scope": 495,
            "src": "5189:504:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "5897:53:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 487,
                        "name": "messagehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "5924:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 488,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "5937:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 489,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "5940:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 490,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "5943:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 486,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "5914:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5914:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 485,
                  "id": 492,
                  "nodeType": "Return",
                  "src": "5907:38:0"
                }
              ]
            },
            "functionSelector": "52e9e8a0",
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverPublicAddress",
            "nameLocation": "5782:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "messagehash",
                  "nameLocation": "5812:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "5804:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5804:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "5831:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "5825:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5825:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "5842:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "5834:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5834:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "5853:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "5845:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5845:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5803:52:0"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5889:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "5881:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5881:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5880:16:0"
            },
            "scope": 495,
            "src": "5773:177:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 496,
        "src": "33:5920:0",
        "usedErrors": []
      }
    ],
    "src": "0:5953:0"
  },
  "bytecode": "608060405260008055600060015534801561001957600080fd5b50610bf2806100296000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a7bb580311610071578063a7bb580314610175578063afd9a94c146101a7578063b163b365146101ba578063b74be800146101cd578063c47cf5de146101e0578063f4863bed146101f957600080fd5b80632ad230a9146100ae57806351710f03146100f357806352e9e8a01461012257806358c9202c1461014d5780635ab361ef14610162575b600080fd5b6100de6100bc366004610920565b6001600160a01b03166000908152600360208190526040909120015460ff1690565b60405190151581526020015b60405180910390f35b6100de610101366004610920565b6001600160a01b031660009081526002602052604090206004015460ff1690565b610135610130366004610942565b61020c565b6040516001600160a01b0390911681526020016100ea565b61016061015b366004610920565b610274565b005b610160610170366004610920565b61035d565b610188610183366004610a28565b610436565b6040805160ff90941684526020840192909252908201526060016100ea565b6101606101b5366004610a65565b610465565b6101606101c8366004610a8f565b610518565b6100de6101db366004610b28565b610640565b6101356101ee366004610a28565b805160209091012090565b610160610207366004610a8f565b6106c3565b6040805160008082526020820180845287905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610260573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6001600160a01b0381166000908152600360208190526040909120015460ff1680156102b257503360009081526002602052604090206004015460ff165b80156102e557503360009081526002602090815260408083206001600160a01b038516845260030190915290205460ff16155b6102ee57600080fd5b3360008181526002602090815260408083206001600160a01b0386168085526003909101835292819020805460ff1916600190811790915590519081529192917f58efeaa91070e02fbcbc866786a01ab2d142a9df696ebcd9fd1515e0954377fd91015b60405180910390a350565b6001600160a01b0381166000908152600360208190526040909120015460ff16801561039b57503360009081526002602052604090206004015460ff165b80156103cd57503360009081526002602090815260408083206001600160a01b038516845260030190915290205460ff165b6103d657600080fd5b3360008181526002602090815260408083206001600160a01b03861680855260039091018352818420805460ff19169055905192835292917f58efeaa91070e02fbcbc866786a01ab2d142a9df696ebcd9fd1515e0954377fd9101610352565b6000806000835160411461044957600080fd5b5050506020810151604082015160609092015160001a92909190565b6001600160a01b03821660009081526002602052604090206004015460ff1680156104f057503360009081526002602052604090206004015460ff16806104f05750336000908152600360208190526040909120015460ff1680156104f057506001600160a01b038216600090815260026020908152604080832033845260030190915290205460ff165b6104f957600080fd5b6001600160a01b03909116600090815260056020526040902060010155565b6001600160a01b0382166000908152600360208190526040909120015460ff161561054257600080fd5b6001600160a01b0382166000908152600360209081526040909120855161056b9287019061086b565b506001600160a01b0382166000908152600360209081526040909120845161059b9260019092019186019061086b565b506001600160a01b038216600090815260036020908152604090912082516105cb9260029092019184019061086b565b506001600160a01b0382166000908152600360208190526040822001805460ff1916600190811790915580549161060183610b5b565b90915550506040516001600160a01b038316907f4cd17b5d25f6ea7efaa933b18d886d9ebcb6b66e8a67f82a70a472bf1fc2004d90600090a250505050565b6001600160a01b03821660009081526003602081905260408220015460ff16801561068657506001600160a01b03821660009081526002602052604090206004015460ff165b61068f57600080fd5b506001600160a01b038082166000908152600260209081526040808320938616835260039093019052205460ff1692915050565b336000908152600360208190526040909120015460ff16801561070257506001600160a01b03821660009081526002602052604090206004015460ff16155b61070b57600080fd5b6001600160a01b038216600090815260026020908152604090912085516107349287019061086b565b506001600160a01b038216600090815260026020908152604090912084516107649260019092019186019061086b565b506001600160a01b038216600090815260026020818152604090922083516107949391909201919084019061086b565b506001600160a01b0382166000818152600260209081526040808320338085526003820184528285208054600160ff1991821681179092559686526004909201805490961682179095556005909252822080546001600160a01b03191690931783557fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b8559201919091558054908061082a83610b5b565b909155505060405133906001600160a01b038416907f98d045482cdb3a3eb48eaffed7579d8339191329ff0088239dd97ac546d59cba90600090a350505050565b82805461087790610b82565b90600052602060002090601f01602090048101928261089957600085556108df565b82601f106108b257805160ff19168380011785556108df565b828001600101855582156108df579182015b828111156108df5782518255916020019190600101906108c4565b506108eb9291506108ef565b5090565b5b808211156108eb57600081556001016108f0565b80356001600160a01b038116811461091b57600080fd5b919050565b60006020828403121561093257600080fd5b61093b82610904565b9392505050565b6000806000806080858703121561095857600080fd5b84359350602085013560ff8116811461097057600080fd5b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109ac57600080fd5b813567ffffffffffffffff808211156109c7576109c7610985565b604051601f8301601f19908116603f011681019082821181831017156109ef576109ef610985565b81604052838152866020858801011115610a0857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610a3a57600080fd5b813567ffffffffffffffff811115610a5157600080fd5b610a5d8482850161099b565b949350505050565b60008060408385031215610a7857600080fd5b610a8183610904565b946020939093013593505050565b60008060008060808587031215610aa557600080fd5b843567ffffffffffffffff80821115610abd57600080fd5b610ac98883890161099b565b95506020870135915080821115610adf57600080fd5b610aeb8883890161099b565b9450610af960408801610904565b93506060870135915080821115610b0f57600080fd5b50610b1c8782880161099b565b91505092959194509250565b60008060408385031215610b3b57600080fd5b610b4483610904565b9150610b5260208401610904565b90509250929050565b600060018201610b7b57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610b9657607f821691505b602082108103610bb657634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f8dfe476fed2102c28495163a11404faba472416a3e7f5488c95d7c2394672bb64736f6c634300080d0033",
  "bytecodeSha1": "df0d532bb9f7617d5515a3486632f449c06816f3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "EHR",
  "coverageMap": {
    "branches": {
      "0": {
        "EHR.authorizeDoctor": {
          "32": [
            3302,
            3331,
            false
          ],
          "33": [
            3352,
            3378,
            false
          ],
          "34": [
            3399,
            3446,
            true
          ]
        },
        "EHR.createDoctor": {
          "43": [
            2792,
            2822,
            true
          ]
        },
        "EHR.createPatient": {
          "46": [
            1863,
            1888,
            false
          ],
          "47": [
            1893,
            1924,
            true
          ]
        },
        "EHR.deauthorizeDoctor": {
          "35": [
            3757,
            3786,
            false
          ],
          "36": [
            3807,
            3833,
            false
          ],
          "37": [
            3854,
            3901,
            true
          ]
        },
        "EHR.doctorAuthorized": {
          "44": [
            4837,
            4866,
            false
          ],
          "45": [
            4870,
            4901,
            true
          ]
        },
        "EHR.splitSignature": {
          "38": [
            5319,
            5341,
            true
          ]
        },
        "EHR.updateRecordHash": {
          "39": [
            4242,
            4273,
            false
          ],
          "40": [
            4278,
            4304,
            true
          ],
          "41": [
            4309,
            4334,
            false
          ],
          "42": [
            4338,
            4386,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "EHR.authorizeDoctor": {
          "4": [
            3294,
            3447
          ],
          "5": [
            3457,
            3511
          ],
          "6": [
            3521,
            3570
          ]
        },
        "EHR.createDoctor": {
          "13": [
            2784,
            2823
          ],
          "14": [
            2833,
            2879
          ],
          "15": [
            2889,
            2933
          ],
          "16": [
            2943,
            2992
          ],
          "17": [
            3002,
            3038
          ],
          "18": [
            3048,
            3061
          ],
          "19": [
            3071,
            3106
          ]
        },
        "EHR.createPatient": {
          "22": [
            1855,
            1925
          ],
          "23": [
            1935,
            1983
          ],
          "24": [
            1993,
            2039
          ],
          "25": [
            2049,
            2101
          ],
          "26": [
            2111,
            2166
          ],
          "27": [
            2176,
            2214
          ],
          "28": [
            2224,
            2275
          ],
          "29": [
            2315,
            2413
          ],
          "30": [
            2423,
            2437
          ],
          "31": [
            2447,
            2496
          ]
        },
        "EHR.deauthorizeDoctor": {
          "7": [
            3749,
            3902
          ],
          "8": [
            3912,
            3967
          ],
          "9": [
            3977,
            4027
          ]
        },
        "EHR.doctorAuthorized": {
          "20": [
            4829,
            4902
          ],
          "21": [
            4912,
            4971
          ]
        },
        "EHR.doctorExists": {
          "0": [
            4668,
            4704
          ]
        },
        "EHR.getAddress": {
          "2": [
            5065,
            5116
          ]
        },
        "EHR.patientExists": {
          "1": [
            4534,
            4572
          ]
        },
        "EHR.recoverPublicAddress": {
          "3": [
            5907,
            5945
          ]
        },
        "EHR.splitSignature": {
          "10": [
            5311,
            5342
          ]
        },
        "EHR.updateRecordHash": {
          "11": [
            4234,
            4389
          ],
          "12": [
            4399,
            4436
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a7bb580311610071578063a7bb580314610175578063afd9a94c146101a7578063b163b365146101ba578063b74be800146101cd578063c47cf5de146101e0578063f4863bed146101f957600080fd5b80632ad230a9146100ae57806351710f03146100f357806352e9e8a01461012257806358c9202c1461014d5780635ab361ef14610162575b600080fd5b6100de6100bc366004610920565b6001600160a01b03166000908152600360208190526040909120015460ff1690565b60405190151581526020015b60405180910390f35b6100de610101366004610920565b6001600160a01b031660009081526002602052604090206004015460ff1690565b610135610130366004610942565b61020c565b6040516001600160a01b0390911681526020016100ea565b61016061015b366004610920565b610274565b005b610160610170366004610920565b61035d565b610188610183366004610a28565b610436565b6040805160ff90941684526020840192909252908201526060016100ea565b6101606101b5366004610a65565b610465565b6101606101c8366004610a8f565b610518565b6100de6101db366004610b28565b610640565b6101356101ee366004610a28565b805160209091012090565b610160610207366004610a8f565b6106c3565b6040805160008082526020820180845287905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610260573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6001600160a01b0381166000908152600360208190526040909120015460ff1680156102b257503360009081526002602052604090206004015460ff165b80156102e557503360009081526002602090815260408083206001600160a01b038516845260030190915290205460ff16155b6102ee57600080fd5b3360008181526002602090815260408083206001600160a01b0386168085526003909101835292819020805460ff1916600190811790915590519081529192917f58efeaa91070e02fbcbc866786a01ab2d142a9df696ebcd9fd1515e0954377fd91015b60405180910390a350565b6001600160a01b0381166000908152600360208190526040909120015460ff16801561039b57503360009081526002602052604090206004015460ff165b80156103cd57503360009081526002602090815260408083206001600160a01b038516845260030190915290205460ff165b6103d657600080fd5b3360008181526002602090815260408083206001600160a01b03861680855260039091018352818420805460ff19169055905192835292917f58efeaa91070e02fbcbc866786a01ab2d142a9df696ebcd9fd1515e0954377fd9101610352565b6000806000835160411461044957600080fd5b5050506020810151604082015160609092015160001a92909190565b6001600160a01b03821660009081526002602052604090206004015460ff1680156104f057503360009081526002602052604090206004015460ff16806104f05750336000908152600360208190526040909120015460ff1680156104f057506001600160a01b038216600090815260026020908152604080832033845260030190915290205460ff165b6104f957600080fd5b6001600160a01b03909116600090815260056020526040902060010155565b6001600160a01b0382166000908152600360208190526040909120015460ff161561054257600080fd5b6001600160a01b0382166000908152600360209081526040909120855161056b9287019061086b565b506001600160a01b0382166000908152600360209081526040909120845161059b9260019092019186019061086b565b506001600160a01b038216600090815260036020908152604090912082516105cb9260029092019184019061086b565b506001600160a01b0382166000908152600360208190526040822001805460ff1916600190811790915580549161060183610b5b565b90915550506040516001600160a01b038316907f4cd17b5d25f6ea7efaa933b18d886d9ebcb6b66e8a67f82a70a472bf1fc2004d90600090a250505050565b6001600160a01b03821660009081526003602081905260408220015460ff16801561068657506001600160a01b03821660009081526002602052604090206004015460ff165b61068f57600080fd5b506001600160a01b038082166000908152600260209081526040808320938616835260039093019052205460ff1692915050565b336000908152600360208190526040909120015460ff16801561070257506001600160a01b03821660009081526002602052604090206004015460ff16155b61070b57600080fd5b6001600160a01b038216600090815260026020908152604090912085516107349287019061086b565b506001600160a01b038216600090815260026020908152604090912084516107649260019092019186019061086b565b506001600160a01b038216600090815260026020818152604090922083516107949391909201919084019061086b565b506001600160a01b0382166000818152600260209081526040808320338085526003820184528285208054600160ff1991821681179092559686526004909201805490961682179095556005909252822080546001600160a01b03191690931783557fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b8559201919091558054908061082a83610b5b565b909155505060405133906001600160a01b038416907f98d045482cdb3a3eb48eaffed7579d8339191329ff0088239dd97ac546d59cba90600090a350505050565b82805461087790610b82565b90600052602060002090601f01602090048101928261089957600085556108df565b82601f106108b257805160ff19168380011785556108df565b828001600101855582156108df579182015b828111156108df5782518255916020019190600101906108c4565b506108eb9291506108ef565b5090565b5b808211156108eb57600081556001016108f0565b80356001600160a01b038116811461091b57600080fd5b919050565b60006020828403121561093257600080fd5b61093b82610904565b9392505050565b6000806000806080858703121561095857600080fd5b84359350602085013560ff8116811461097057600080fd5b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109ac57600080fd5b813567ffffffffffffffff808211156109c7576109c7610985565b604051601f8301601f19908116603f011681019082821181831017156109ef576109ef610985565b81604052838152866020858801011115610a0857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610a3a57600080fd5b813567ffffffffffffffff811115610a5157600080fd5b610a5d8482850161099b565b949350505050565b60008060408385031215610a7857600080fd5b610a8183610904565b946020939093013593505050565b60008060008060808587031215610aa557600080fd5b843567ffffffffffffffff80821115610abd57600080fd5b610ac98883890161099b565b95506020870135915080821115610adf57600080fd5b610aeb8883890161099b565b9450610af960408801610904565b93506060870135915080821115610b0f57600080fd5b50610b1c8782880161099b565b91505092959194509250565b60008060408385031215610b3b57600080fd5b610b4483610904565b9150610b5260208401610904565b90509250929050565b600060018201610b7b57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610b9657607f821691505b602082108103610bb657634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f8dfe476fed2102c28495163a11404faba472416a3e7f5488c95d7c2394672bb64736f6c634300080d0033",
  "deployedSourceMap": "33:5920:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4585:126;;;;;;:::i;:::-;-1:-1:-1;;;;;4675:23:0;4652:4;4675:23;;;:7;:23;;;;;;;;:29;;;;;4585:126;;;;548:14:1;;541:22;523:41;;511:2;496:18;4585:126:0;;;;;;;;4449:130;;;;;;:::i;:::-;-1:-1:-1;;;;;4541:25:0;4518:4;4541:25;;;:8;:25;;;;;:31;;;;;;4449:130;5773:177;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1218:32:1;;;1200:51;;1188:2;1173:18;5773:177:0;1054:203:1;3119:458:0;;;;;;:::i;:::-;;:::i;:::-;;3583:451;;;;;;:::i;:::-;;:::i;5189:504::-;;;;;;:::i;:::-;;:::i;:::-;;;;2670:4:1;2658:17;;;2640:36;;2707:2;2692:18;;2685:34;;;;2735:18;;;2728:34;2628:2;2613:18;5189:504:0;2442:326:1;4040:403:0;;;;;;:::i;:::-;;:::i;2509:604::-;;;;;;:::i;:::-;;:::i;4717:261::-;;;;;;:::i;:::-;;:::i;4984:139::-;;;;;;:::i;:::-;5096:17;;;;;;;;4984:139;1569:934;;;;;;:::i;:::-;;:::i;5773:177::-;5914:31;;;5881:14;5914:31;;;;;;;;;4343:25:1;;;4416:4;4404:17;;4384:18;;;4377:45;;;;4438:18;;;4431:34;;;4481:18;;;4474:34;;;5914:31:0;;4315:19:1;;5914:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5914:31:0;;-1:-1:-1;;5914:31:0;;;5773:177;-1:-1:-1;;;;;;5773:177:0:o;3119:458::-;-1:-1:-1;;;;;3302:23:0;;;;;;:7;:23;;;;;;;;:29;;;;:76;;;;-1:-1:-1;3361:10:0;3352:20;;;;:8;:20;;;;;:26;;;;;3302:76;:144;;;;-1:-1:-1;3408:10:0;3399:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3399:47:0;;;;:31;;:47;;;;;;;;3398:48;3302:144;3294:153;;;;;;3466:10;3457:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3457:47:0;;;;;:31;;;;:47;;;;;;:54;;-1:-1:-1;;3457:54:0;3507:4;3457:54;;;;;;3526:44;;523:41:1;;;3457:47:0;;3466:10;3526:44;;496:18:1;3526:44:0;;;;;;;;3119:458;:::o;3583:451::-;-1:-1:-1;;;;;3757:23:0;;;;;;:7;:23;;;;;;;;:29;;;;:76;;;;-1:-1:-1;3816:10:0;3807:20;;;;:8;:20;;;;;:26;;;;;3757:76;:144;;;;-1:-1:-1;3863:10:0;3854:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3854:47:0;;;;:31;;:47;;;;;;;;3757:144;3749:153;;;;;;3921:10;3962:5;3912:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3912:47:0;;;;;:31;;;;:47;;;;;:55;;-1:-1:-1;;3912:55:0;;;3982:45;;523:41:1;;;3912:47:0;3921:10;3982:45;;496:18:1;3982:45:0;383:187:1;5189:504:0;5266:7;5275:9;5286;5319;:16;5339:2;5319:22;5311:31;;;;;;-1:-1:-1;;;5458:2:0;5443:18;;5437:25;5533:2;5518:18;;5512:25;5645:2;5630:18;;;5624:25;5621:1;5616:34;;5437:25;;5512;5189:504::o;4040:403::-;-1:-1:-1;;;;;4242:25:0;;;;;;:8;:25;;;;;:31;;;;;:146;;;;-1:-1:-1;4287:10:0;4278:20;;;;:8;:20;;;;;:26;;;;;;:109;;-1:-1:-1;4317:10:0;4309:19;;;;:7;:19;;;;;;;;:25;;;;:77;;;;-1:-1:-1;;;;;;4338:25:0;;;;;;:8;:25;;;;;;;;4375:10;4338:48;;:36;;:48;;;;;;;;4309:77;4234:155;;;;;;-1:-1:-1;;;;;4399:24:0;;;;;;;:7;:24;;;;;:29;;:37;4040:403::o;2509:604::-;-1:-1:-1;;;;;2793:23:0;;;;;;:7;:23;;;;;;;;:29;;;;2792:30;2784:39;;;;;;-1:-1:-1;;;;;2833:23:0;;;;;;:7;:23;;;;;;;;:46;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2889:23:0;;;;;;:7;:23;;;;;;;;:44;;;;:32;;;;;:44;;;;:::i;:::-;-1:-1:-1;;;;;;2943:23:0;;;;;;:7;:23;;;;;;;;:49;;;;:30;;;;;:49;;;;:::i;:::-;-1:-1:-1;;;;;;3002:23:0;;;;;;:7;:23;;;;;;;:29;:36;;-1:-1:-1;;3002:36:0;3034:4;3002:36;;;;;;3048:13;;;;;;:::i;:::-;;;;-1:-1:-1;;3076:30:0;;-1:-1:-1;;;;;3076:30:0;;;;;;;;2509:604;;;;:::o;4717:261::-;-1:-1:-1;;;;;4837:23:0;;4813:4;4837:23;;;:7;:23;;;;;;;:29;;;;:64;;;;-1:-1:-1;;;;;;4870:25:0;;;;;;:8;:25;;;;;:31;;;;;4837:64;4829:73;;;;;;-1:-1:-1;;;;;;4919:25:0;;;;;;;:8;:25;;;;;;;;:52;;;;;:36;;;;:52;;;;;;4717:261;;;;:::o;1569:934::-;1871:10;1863:19;;;;:7;:19;;;;;;;;:25;;;;:61;;;;-1:-1:-1;;;;;;1893:25:0;;;;;;:8;:25;;;;;:31;;;;;1892:32;1863:61;1855:70;;;;;;-1:-1:-1;;;;;1935:25:0;;;;;;:8;:25;;;;;;;;:48;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1993:25:0;;;;;;:8;:25;;;;;;;;:46;;;;:34;;;;;:46;;;;:::i;:::-;-1:-1:-1;;;;;;2049:25:0;;;;;;:8;:25;;;;;;;;:52;;;;:32;;;;;:52;;;;;:::i;:::-;-1:-1:-1;;;;;;2111:25:0;;;;;;:8;:25;;;;;;;;2148:10;2111:48;;;:36;;;:48;;;;;:55;;2162:4;-1:-1:-1;;2111:55:0;;;;;;;;2176:25;;;:31;;;;:38;;;;;;;;;;2224:7;:24;;;;;:51;;-1:-1:-1;;;;;;2224:51:0;;;;;;2347:66;2315:29;;:98;;;;2423:14;;;2111:25;2423:14;;;:::i;:::-;;;;-1:-1:-1;;2452:44:0;;2485:10;;-1:-1:-1;;;;;2452:44:0;;;;;;;;1569:934;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;575:474::-;659:6;667;675;683;736:3;724:9;715:7;711:23;707:33;704:53;;;753:1;750;743:12;704:53;789:9;776:23;766:33;;849:2;838:9;834:18;821:32;893:4;886:5;882:16;875:5;872:27;862:55;;913:1;910;903:12;862:55;575:474;;936:5;;-1:-1:-1;;;;988:2:1;973:18;;960:32;;1039:2;1024:18;1011:32;;575:474::o;1262:127::-;1323:10;1318:3;1314:20;1311:1;1304:31;1354:4;1351:1;1344:15;1378:4;1375:1;1368:15;1394:718;1436:5;1489:3;1482:4;1474:6;1470:17;1466:27;1456:55;;1507:1;1504;1497:12;1456:55;1543:6;1530:20;1569:18;1606:2;1602;1599:10;1596:36;;;1612:18;;:::i;:::-;1687:2;1681:9;1655:2;1741:13;;-1:-1:-1;;1737:22:1;;;1761:2;1733:31;1729:40;1717:53;;;1785:18;;;1805:22;;;1782:46;1779:72;;;1831:18;;:::i;:::-;1871:10;1867:2;1860:22;1906:2;1898:6;1891:18;1952:3;1945:4;1940:2;1932:6;1928:15;1924:26;1921:35;1918:55;;;1969:1;1966;1959:12;1918:55;2033:2;2026:4;2018:6;2014:17;2007:4;1999:6;1995:17;1982:54;2080:1;2073:4;2068:2;2060:6;2056:15;2052:26;2045:37;2100:6;2091:15;;;;;;1394:718;;;;:::o;2117:320::-;2185:6;2238:2;2226:9;2217:7;2213:23;2209:32;2206:52;;;2254:1;2251;2244:12;2206:52;2294:9;2281:23;2327:18;2319:6;2316:30;2313:50;;;2359:1;2356;2349:12;2313:50;2382:49;2423:7;2414:6;2403:9;2399:22;2382:49;:::i;:::-;2372:59;2117:320;-1:-1:-1;;;;2117:320:1:o;2773:254::-;2841:6;2849;2902:2;2890:9;2881:7;2877:23;2873:32;2870:52;;;2918:1;2915;2908:12;2870:52;2941:29;2960:9;2941:29;:::i;:::-;2931:39;3017:2;3002:18;;;;2989:32;;-1:-1:-1;;;2773:254:1:o;3032:814::-;3147:6;3155;3163;3171;3224:3;3212:9;3203:7;3199:23;3195:33;3192:53;;;3241:1;3238;3231:12;3192:53;3281:9;3268:23;3310:18;3351:2;3343:6;3340:14;3337:34;;;3367:1;3364;3357:12;3337:34;3390:49;3431:7;3422:6;3411:9;3407:22;3390:49;:::i;:::-;3380:59;;3492:2;3481:9;3477:18;3464:32;3448:48;;3521:2;3511:8;3508:16;3505:36;;;3537:1;3534;3527:12;3505:36;3560:51;3603:7;3592:8;3581:9;3577:24;3560:51;:::i;:::-;3550:61;;3630:38;3664:2;3653:9;3649:18;3630:38;:::i;:::-;3620:48;;3721:2;3710:9;3706:18;3693:32;3677:48;;3750:2;3740:8;3737:16;3734:36;;;3766:1;3763;3756:12;3734:36;;3789:51;3832:7;3821:8;3810:9;3806:24;3789:51;:::i;:::-;3779:61;;;3032:814;;;;;;;:::o;3851:260::-;3919:6;3927;3980:2;3968:9;3959:7;3955:23;3951:32;3948:52;;;3996:1;3993;3986:12;3948:52;4019:29;4038:9;4019:29;:::i;:::-;4009:39;;4067:38;4101:2;4090:9;4086:18;4067:38;:::i;:::-;4057:48;;3851:260;;;;;:::o;4519:232::-;4558:3;4579:17;;;4576:140;;4638:10;4633:3;4629:20;4626:1;4619:31;4673:4;4670:1;4663:15;4701:4;4698:1;4691:15;4576:140;-1:-1:-1;4743:1:1;4732:13;;4519:232::o;4756:380::-;4835:1;4831:12;;;;4878;;;4899:61;;4953:4;4945:6;4941:17;4931:27;;4899:61;5006:2;4998:6;4995:14;4975:18;4972:38;4969:161;;5052:10;5047:3;5043:20;5040:1;5033:31;5087:4;5084:1;5077:15;5115:4;5112:1;5105:15;4969:161;;4756:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    33,
    5953
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xAFD9A94C EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xB163B365 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xB74BE800 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xC47CF5DE EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xF4863BED EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AD230A9 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x51710F03 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x52E9E8A0 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x58C9202C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x5AB361EF EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0xA28 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP8 SWAP1 MSTORE PUSH1 0xFF DUP7 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2B2 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x2E5 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x58EFEAA91070E02FBCBC866786A01AB2D142A9DF696EBCD9FD1515E0954377FD SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x39B JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x3CD JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 SWAP2 PUSH32 0x58EFEAA91070E02FBCBC866786A01AB2D142A9DF696EBCD9FD1515E0954377FD SWAP2 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x4F0 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x4F0 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x4F0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH2 0x56B SWAP3 DUP8 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0x59B SWAP3 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP7 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x5CB SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x601 DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x4CD17B5D25F6EA7EFAA933B18D886D9EBCB6B66E8A67F82A70A472BF1FC2004D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x686 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x702 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH2 0x734 SWAP3 DUP8 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0x764 SWAP3 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP7 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP4 MLOAD PUSH2 0x794 SWAP4 SWAP2 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE PUSH1 0x3 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP7 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP7 AND DUP3 OR SWAP1 SWAP6 SSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR DUP4 SSTORE PUSH32 0xE3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP1 SLOAD SWAP1 DUP1 PUSH2 0x82A DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x98D045482CDB3A3EB48EAFFED7579D8339191329FF0088239DD97AC546D59CBA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x877 SWAP1 PUSH2 0xB82 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x899 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x8DF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x8B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x8DF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x8DF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x8DF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8C4 JUMP JUMPDEST POP PUSH2 0x8EB SWAP3 SWAP2 POP PUSH2 0x8EF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93B DUP3 PUSH2 0x904 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C7 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9EF PUSH2 0x985 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5D DUP5 DUP3 DUP6 ADD PUSH2 0x99B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA81 DUP4 PUSH2 0x904 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC9 DUP9 DUP4 DUP10 ADD PUSH2 0x99B JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAEB DUP9 DUP4 DUP10 ADD PUSH2 0x99B JUMP JUMPDEST SWAP5 POP PUSH2 0xAF9 PUSH1 0x40 DUP9 ADD PUSH2 0x904 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1C DUP8 DUP3 DUP9 ADD PUSH2 0x99B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB44 DUP4 PUSH2 0x904 JUMP JUMPDEST SWAP2 POP PUSH2 0xB52 PUSH1 0x20 DUP5 ADD PUSH2 0x904 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xDF 0xE4 PUSH23 0xFED2102C28495163A11404FABA472416A3E7F5488C95D7 0xC2 CODECOPY CHAINID PUSH19 0xBB64736F6C634300080D003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA7BB5803"
    },
    "38": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA7BB5803"
    },
    "49": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175"
    },
    "53": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAFD9A94C"
    },
    "60": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "64": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB163B365"
    },
    "71": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA"
    },
    "75": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB74BE800"
    },
    "82": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CD"
    },
    "86": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC47CF5DE"
    },
    "93": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "97": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF4863BED"
    },
    "104": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9"
    },
    "108": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2AD230A9"
    },
    "120": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x51710F03"
    },
    "131": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "135": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x52E9E8A0"
    },
    "142": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122"
    },
    "146": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x58C9202C"
    },
    "153": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "157": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5AB361EF"
    },
    "164": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "168": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        33,
        5953
      ],
      "op": "REVERT",
      "path": "0"
    },
    "174": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "178": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC"
    },
    "181": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "182": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "184": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "187": {
      "fn": "EHR.doctorExists",
      "jump": "i",
      "offset": [
        4585,
        4711
      ],
      "op": "JUMP",
      "path": "0"
    },
    "188": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "195": {
      "op": "SHL"
    },
    "196": {
      "op": "SUB"
    },
    "197": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "198": {
      "fn": "EHR.doctorExists",
      "offset": [
        4652,
        4656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "201": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "202": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "203": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "205": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "207": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "208": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "209": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "210": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "212": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "213": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "214": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4698
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "215": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4704
      ],
      "op": "ADD",
      "path": "0"
    },
    "216": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4704
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "217": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "219": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4704
      ],
      "op": "AND",
      "path": "0"
    },
    "220": {
      "fn": "EHR.doctorExists",
      "offset": [
        4675,
        4704
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "221": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "JUMP",
      "path": "0"
    },
    "222": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "225": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "226": {
      "op": "SWAP1"
    },
    "227": {
      "op": "ISZERO"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "DUP2"
    },
    "230": {
      "op": "MSTORE"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "233": {
      "op": "ADD"
    },
    "234": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "237": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "238": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "240": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "SUB",
      "path": "0"
    },
    "241": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "242": {
      "fn": "EHR.doctorExists",
      "offset": [
        4585,
        4711
      ],
      "op": "RETURN",
      "path": "0"
    },
    "243": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "247": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "250": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "251": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "253": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "256": {
      "fn": "EHR.patientExists",
      "jump": "i",
      "offset": [
        4449,
        4579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "257": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "264": {
      "op": "SHL"
    },
    "265": {
      "op": "SUB"
    },
    "266": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "AND",
      "path": "0",
      "statement": 1
    },
    "267": {
      "fn": "EHR.patientExists",
      "offset": [
        4518,
        4522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "269": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "271": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "272": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "274": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "276": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "277": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "279": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "280": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4566
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "281": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4572
      ],
      "op": "ADD",
      "path": "0"
    },
    "284": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "285": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "287": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4572
      ],
      "op": "AND",
      "path": "0"
    },
    "288": {
      "fn": "EHR.patientExists",
      "offset": [
        4541,
        4572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "289": {
      "fn": "EHR.patientExists",
      "offset": [
        4449,
        4579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "290": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "291": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135"
    },
    "294": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x130"
    },
    "297": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "298": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "300": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x942"
    },
    "303": {
      "fn": "EHR.recoverPublicAddress",
      "jump": "i",
      "offset": [
        5773,
        5950
      ],
      "op": "JUMP",
      "path": "0"
    },
    "304": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "305": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C"
    },
    "308": {
      "fn": "EHR.recoverPublicAddress",
      "jump": "i",
      "offset": [
        5773,
        5950
      ],
      "op": "JUMP",
      "path": "0"
    },
    "309": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "310": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "312": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "319": {
      "op": "SHL"
    },
    "320": {
      "op": "SUB"
    },
    "321": {
      "op": "SWAP1"
    },
    "322": {
      "op": "SWAP2"
    },
    "323": {
      "op": "AND"
    },
    "324": {
      "op": "DUP2"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "332": {
      "op": "JUMP"
    },
    "333": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "337": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "340": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "341": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "343": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "346": {
      "fn": "EHR.authorizeDoctor",
      "jump": "i",
      "offset": [
        3119,
        3577
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "351": {
      "fn": "EHR.authorizeDoctor",
      "jump": "i",
      "offset": [
        3119,
        3577
      ],
      "op": "JUMP",
      "path": "0"
    },
    "352": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "STOP",
      "path": "0"
    },
    "354": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "355": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "358": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "361": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "362": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "364": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "367": {
      "fn": "EHR.deauthorizeDoctor",
      "jump": "i",
      "offset": [
        3583,
        4034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "372": {
      "fn": "EHR.deauthorizeDoctor",
      "jump": "i",
      "offset": [
        3583,
        4034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "373": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188"
    },
    "377": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "380": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "381": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "383": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA28"
    },
    "386": {
      "fn": "EHR.splitSignature",
      "jump": "i",
      "offset": [
        5189,
        5693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "387": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x436"
    },
    "391": {
      "fn": "EHR.splitSignature",
      "jump": "i",
      "offset": [
        5189,
        5693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "392": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "395": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "DUP1",
      "path": "0"
    },
    "396": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "397": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "399": {
      "op": "SWAP1"
    },
    "400": {
      "op": "SWAP5"
    },
    "401": {
      "op": "AND"
    },
    "402": {
      "op": "DUP5"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "406": {
      "op": "DUP5"
    },
    "407": {
      "op": "ADD"
    },
    "408": {
      "op": "SWAP3"
    },
    "409": {
      "op": "SWAP1"
    },
    "410": {
      "op": "SWAP3"
    },
    "411": {
      "op": "MSTORE"
    },
    "412": {
      "op": "SWAP1"
    },
    "413": {
      "op": "DUP3"
    },
    "414": {
      "op": "ADD"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "418": {
      "op": "ADD"
    },
    "419": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "422": {
      "op": "JUMP"
    },
    "423": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "424": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "427": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "430": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "431": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "433": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA65"
    },
    "436": {
      "fn": "EHR.updateRecordHash",
      "jump": "i",
      "offset": [
        4040,
        4443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x465"
    },
    "441": {
      "fn": "EHR.updateRecordHash",
      "jump": "i",
      "offset": [
        4040,
        4443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "442": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "443": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "446": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C8"
    },
    "449": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "450": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "452": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8F"
    },
    "455": {
      "fn": "EHR.createDoctor",
      "jump": "i",
      "offset": [
        2509,
        3113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "456": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "457": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x518"
    },
    "460": {
      "fn": "EHR.createDoctor",
      "jump": "i",
      "offset": [
        2509,
        3113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "461": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "462": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "465": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "468": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "469": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "471": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB28"
    },
    "474": {
      "fn": "EHR.doctorAuthorized",
      "jump": "i",
      "offset": [
        4717,
        4978
      ],
      "op": "JUMP",
      "path": "0"
    },
    "475": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x640"
    },
    "479": {
      "fn": "EHR.doctorAuthorized",
      "jump": "i",
      "offset": [
        4717,
        4978
      ],
      "op": "JUMP",
      "path": "0"
    },
    "480": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "481": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135"
    },
    "484": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE"
    },
    "487": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "488": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "490": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA28"
    },
    "493": {
      "fn": "EHR.getAddress",
      "jump": "i",
      "offset": [
        4984,
        5123
      ],
      "op": "JUMP",
      "path": "0"
    },
    "494": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "495": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 2
    },
    "496": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "497": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "499": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "500": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "501": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "ADD",
      "path": "0"
    },
    "502": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "503": {
      "fn": "EHR.getAddress",
      "offset": [
        5096,
        5113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "EHR.getAddress",
      "offset": [
        4984,
        5123
      ],
      "op": "JUMP",
      "path": "0"
    },
    "505": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "506": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "509": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207"
    },
    "512": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "513": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "515": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8F"
    },
    "518": {
      "fn": "EHR.createPatient",
      "jump": "i",
      "offset": [
        1569,
        2503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "519": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "520": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C3"
    },
    "523": {
      "fn": "EHR.createPatient",
      "jump": "i",
      "offset": [
        1569,
        2503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "524": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "525": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "527": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "528": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "529": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5881,
        5895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "531": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "532": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP3",
      "path": "0"
    },
    "533": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "534": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "536": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP3",
      "path": "0"
    },
    "537": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "ADD",
      "path": "0"
    },
    "538": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "539": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP5",
      "path": "0"
    },
    "540": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "541": {
      "op": "DUP8"
    },
    "542": {
      "op": "SWAP1"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "546": {
      "op": "DUP7"
    },
    "547": {
      "op": "AND"
    },
    "548": {
      "op": "SWAP3"
    },
    "549": {
      "op": "DUP3"
    },
    "550": {
      "op": "ADD"
    },
    "551": {
      "op": "SWAP3"
    },
    "552": {
      "op": "SWAP1"
    },
    "553": {
      "op": "SWAP3"
    },
    "554": {
      "op": "MSTORE"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "557": {
      "op": "DUP2"
    },
    "558": {
      "op": "ADD"
    },
    "559": {
      "op": "DUP5"
    },
    "560": {
      "op": "SWAP1"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "564": {
      "op": "DUP2"
    },
    "565": {
      "op": "ADD"
    },
    "566": {
      "op": "DUP4"
    },
    "567": {
      "op": "SWAP1"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "571": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "574": {
      "op": "ADD"
    },
    "575": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "577": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "579": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "580": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "582": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "583": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "SUB",
      "path": "0"
    },
    "584": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "586": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP5",
      "path": "0"
    },
    "587": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "SUB",
      "path": "0"
    },
    "588": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "589": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP6",
      "path": "0"
    },
    "590": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "GAS",
      "path": "0"
    },
    "591": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "592": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "593": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "594": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "595": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "598": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "599": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "600": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "602": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "603": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "604": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "605": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "607": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "REVERT",
      "path": "0"
    },
    "608": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "op": "POP"
    },
    "611": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "613": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "616": {
      "op": "NOT"
    },
    "617": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "ADD",
      "path": "0"
    },
    "618": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "619": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5914,
        5945
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "620": {
      "fn": "EHR.recoverPublicAddress",
      "offset": [
        5773,
        5950
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "op": "POP"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "fn": "EHR.recoverPublicAddress",
      "jump": "o",
      "offset": [
        5773,
        5950
      ],
      "op": "JUMP",
      "path": "0"
    },
    "628": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "635": {
      "op": "SHL"
    },
    "636": {
      "op": "SUB"
    },
    "637": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 4
    },
    "638": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "AND",
      "path": "0"
    },
    "639": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "641": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "642": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP2",
      "path": "0"
    },
    "643": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "644": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "646": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "648": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP2",
      "path": "0"
    },
    "649": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "650": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "651": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "653": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "654": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "655": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3325
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "656": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3331
      ],
      "op": "ADD",
      "path": "0"
    },
    "657": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "658": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "660": {
      "branch": 32,
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3331
      ],
      "op": "AND",
      "path": "0"
    },
    "661": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "662": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3378
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "663": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B2"
    },
    "666": {
      "branch": 32,
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3378
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3361,
        3371
      ],
      "op": "CALLER",
      "path": "0"
    },
    "669": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "671": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "672": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "DUP2",
      "path": "0"
    },
    "673": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "674": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "676": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "678": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "679": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "681": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "682": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3372
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "683": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "685": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "686": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3378
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "687": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "689": {
      "branch": 33,
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3352,
        3378
      ],
      "op": "AND",
      "path": "0"
    },
    "690": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "691": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3446
      ],
      "op": "DUP1",
      "path": "0"
    },
    "692": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3446
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "693": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E5"
    },
    "696": {
      "branch": 33,
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3446
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3408,
        3418
      ],
      "op": "CALLER",
      "path": "0"
    },
    "699": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "701": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "702": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "703": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "704": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "706": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "708": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "709": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "710": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "711": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "713": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "DUP1",
      "path": "0"
    },
    "714": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "DUP4",
      "path": "0"
    },
    "715": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3419
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "op": "SUB"
    },
    "724": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "DUP6",
      "path": "0"
    },
    "725": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "AND",
      "path": "0"
    },
    "726": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "DUP5",
      "path": "0"
    },
    "727": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "728": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "730": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3430
      ],
      "op": "ADD",
      "path": "0"
    },
    "731": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "732": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "733": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "734": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "736": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "737": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "739": {
      "branch": 34,
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3399,
        3446
      ],
      "op": "AND",
      "path": "0"
    },
    "740": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3398,
        3446
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "741": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3302,
        3446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "742": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3294,
        3447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EE"
    },
    "745": {
      "branch": 34,
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3294,
        3447
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "746": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3294,
        3447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "748": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3294,
        3447
      ],
      "op": "DUP1",
      "path": "0"
    },
    "749": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3294,
        3447
      ],
      "op": "REVERT",
      "path": "0"
    },
    "750": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3294,
        3447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "751": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3466,
        3476
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "752": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "754": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "755": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "756": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "757": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "759": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "761": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "762": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "763": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "764": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "766": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "767": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "DUP4",
      "path": "0"
    },
    "768": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3477
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "DUP7",
      "path": "0"
    },
    "778": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "AND",
      "path": "0"
    },
    "779": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "DUP1",
      "path": "0"
    },
    "780": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "DUP6",
      "path": "0"
    },
    "781": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "782": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "784": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "785": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3488
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "786": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3488
      ],
      "op": "ADD",
      "path": "0"
    },
    "787": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "DUP4",
      "path": "0"
    },
    "788": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "789": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "790": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "791": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "792": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "793": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "DUP1",
      "path": "0"
    },
    "794": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "797": {
      "op": "NOT"
    },
    "798": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "AND",
      "path": "0"
    },
    "799": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3507,
        3511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "801": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "802": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "DUP2",
      "path": "0"
    },
    "803": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "OR",
      "path": "0"
    },
    "804": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "805": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "806": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3511
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "807": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 6
    },
    "808": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "809": {
      "op": "SWAP1"
    },
    "810": {
      "op": "DUP2"
    },
    "811": {
      "op": "MSTORE"
    },
    "812": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "813": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3457,
        3504
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "814": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3466,
        3476
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "815": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x58EFEAA91070E02FBCBC866786A01AB2D142A9DF696EBCD9FD1515E0954377FD"
    },
    "848": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "851": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "853": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "854": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "855": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "856": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "SUB",
      "path": "0"
    },
    "857": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "858": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3526,
        3570
      ],
      "op": "LOG3",
      "path": "0"
    },
    "859": {
      "fn": "EHR.authorizeDoctor",
      "offset": [
        3119,
        3577
      ],
      "op": "POP",
      "path": "0"
    },
    "860": {
      "fn": "EHR.authorizeDoctor",
      "jump": "o",
      "offset": [
        3119,
        3577
      ],
      "op": "JUMP",
      "path": "0"
    },
    "861": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3583,
        4034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "868": {
      "op": "SHL"
    },
    "869": {
      "op": "SUB"
    },
    "870": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 7
    },
    "871": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "AND",
      "path": "0"
    },
    "872": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "874": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "875": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "DUP2",
      "path": "0"
    },
    "876": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "877": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "879": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "881": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "DUP2",
      "path": "0"
    },
    "882": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "883": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "884": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "886": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "887": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "888": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3780
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "889": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3786
      ],
      "op": "ADD",
      "path": "0"
    },
    "890": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3786
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "891": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "893": {
      "branch": 35,
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3786
      ],
      "op": "AND",
      "path": "0"
    },
    "894": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "895": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "896": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39B"
    },
    "899": {
      "branch": 35,
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "900": {
      "op": "POP"
    },
    "901": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3816,
        3826
      ],
      "op": "CALLER",
      "path": "0"
    },
    "902": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "904": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "905": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "906": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "907": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "909": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "911": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "912": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "914": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "915": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3827
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "916": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "918": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3833
      ],
      "op": "ADD",
      "path": "0"
    },
    "919": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3833
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "920": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "922": {
      "branch": 36,
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3807,
        3833
      ],
      "op": "AND",
      "path": "0"
    },
    "923": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "924": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "925": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3901
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "926": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD"
    },
    "929": {
      "branch": 36,
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3863,
        3873
      ],
      "op": "CALLER",
      "path": "0"
    },
    "932": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "934": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "935": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "936": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "937": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "939": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "941": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "942": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "943": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "944": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "946": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "947": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "DUP4",
      "path": "0"
    },
    "948": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3874
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "DUP6",
      "path": "0"
    },
    "958": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "AND",
      "path": "0"
    },
    "959": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "DUP5",
      "path": "0"
    },
    "960": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "961": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "963": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3885
      ],
      "op": "ADD",
      "path": "0"
    },
    "964": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "965": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "966": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "967": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "968": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "969": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "970": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "972": {
      "branch": 37,
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3854,
        3901
      ],
      "op": "AND",
      "path": "0"
    },
    "973": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3757,
        3901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "974": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3749,
        3902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D6"
    },
    "977": {
      "branch": 37,
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3749,
        3902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "978": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3749,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "980": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3749,
        3902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "981": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3749,
        3902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "982": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3749,
        3902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "983": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3921,
        3931
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "984": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3962,
        3967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "986": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "987": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "988": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "989": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "991": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "993": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "994": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "995": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "996": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "998": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "999": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1000": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3932
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "op": "SUB"
    },
    "1009": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1010": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "AND",
      "path": "0"
    },
    "1011": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1012": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1013": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1014": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3943
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1016": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1017": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3943
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1018": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3943
      ],
      "op": "ADD",
      "path": "0"
    },
    "1019": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1020": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1021": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1022": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1023": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1024": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1025": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3967
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1028": {
      "op": "NOT"
    },
    "1029": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3967
      ],
      "op": "AND",
      "path": "0"
    },
    "1030": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1031": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3967
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1032": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3982,
        4027
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "1033": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3982,
        4027
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1034": {
      "op": "SWAP3"
    },
    "1035": {
      "op": "DUP4"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3912,
        3959
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1038": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3921,
        3931
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1039": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3982,
        4027
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x58EFEAA91070E02FBCBC866786A01AB2D142A9DF696EBCD9FD1515E0954377FD"
    },
    "1072": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3982,
        4027
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "fn": "EHR.deauthorizeDoctor",
      "offset": [
        3982,
        4027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "1077": {
      "op": "JUMP"
    },
    "1078": {
      "fn": "EHR.splitSignature",
      "offset": [
        5189,
        5693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1079": {
      "fn": "EHR.splitSignature",
      "offset": [
        5266,
        5273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1081": {
      "fn": "EHR.splitSignature",
      "offset": [
        5275,
        5284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1082": {
      "fn": "EHR.splitSignature",
      "offset": [
        5286,
        5295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1084": {
      "fn": "EHR.splitSignature",
      "offset": [
        5319,
        5328
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 10
    },
    "1085": {
      "fn": "EHR.splitSignature",
      "offset": [
        5319,
        5335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1086": {
      "fn": "EHR.splitSignature",
      "offset": [
        5339,
        5341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x41"
    },
    "1088": {
      "branch": 38,
      "fn": "EHR.splitSignature",
      "offset": [
        5319,
        5341
      ],
      "op": "EQ",
      "path": "0"
    },
    "1089": {
      "fn": "EHR.splitSignature",
      "offset": [
        5311,
        5342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x449"
    },
    "1092": {
      "branch": 38,
      "fn": "EHR.splitSignature",
      "offset": [
        5311,
        5342
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1093": {
      "fn": "EHR.splitSignature",
      "offset": [
        5311,
        5342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1095": {
      "fn": "EHR.splitSignature",
      "offset": [
        5311,
        5342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1096": {
      "fn": "EHR.splitSignature",
      "offset": [
        5311,
        5342
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1097": {
      "fn": "EHR.splitSignature",
      "offset": [
        5311,
        5342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "fn": "EHR.splitSignature",
      "offset": [
        5458,
        5460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1103": {
      "fn": "EHR.splitSignature",
      "offset": [
        5443,
        5461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1104": {
      "fn": "EHR.splitSignature",
      "offset": [
        5443,
        5461
      ],
      "op": "ADD",
      "path": "0"
    },
    "1105": {
      "fn": "EHR.splitSignature",
      "offset": [
        5437,
        5462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1106": {
      "fn": "EHR.splitSignature",
      "offset": [
        5533,
        5535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1108": {
      "fn": "EHR.splitSignature",
      "offset": [
        5518,
        5536
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1109": {
      "fn": "EHR.splitSignature",
      "offset": [
        5518,
        5536
      ],
      "op": "ADD",
      "path": "0"
    },
    "1110": {
      "fn": "EHR.splitSignature",
      "offset": [
        5512,
        5537
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1111": {
      "fn": "EHR.splitSignature",
      "offset": [
        5645,
        5647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1113": {
      "fn": "EHR.splitSignature",
      "offset": [
        5630,
        5648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1114": {
      "fn": "EHR.splitSignature",
      "offset": [
        5630,
        5648
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1115": {
      "fn": "EHR.splitSignature",
      "offset": [
        5630,
        5648
      ],
      "op": "ADD",
      "path": "0"
    },
    "1116": {
      "fn": "EHR.splitSignature",
      "offset": [
        5624,
        5649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1117": {
      "fn": "EHR.splitSignature",
      "offset": [
        5621,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1119": {
      "fn": "EHR.splitSignature",
      "offset": [
        5616,
        5650
      ],
      "op": "BYTE",
      "path": "0"
    },
    "1120": {
      "fn": "EHR.splitSignature",
      "offset": [
        5616,
        5650
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1121": {
      "fn": "EHR.splitSignature",
      "offset": [
        5437,
        5462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1122": {
      "fn": "EHR.splitSignature",
      "offset": [
        5437,
        5462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1123": {
      "fn": "EHR.splitSignature",
      "offset": [
        5512,
        5537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1124": {
      "fn": "EHR.splitSignature",
      "jump": "o",
      "offset": [
        5189,
        5693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1125": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4040,
        4443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1132": {
      "op": "SHL"
    },
    "1133": {
      "op": "SUB"
    },
    "1134": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 11
    },
    "1135": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "AND",
      "path": "0"
    },
    "1136": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1138": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1139": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1140": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1141": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1143": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1145": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1146": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1148": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1149": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4267
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1150": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1152": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4273
      ],
      "op": "ADD",
      "path": "0"
    },
    "1153": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4273
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1154": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1156": {
      "branch": 39,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4273
      ],
      "op": "AND",
      "path": "0"
    },
    "1157": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1158": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4388
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1159": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F0"
    },
    "1162": {
      "branch": 39,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4242,
        4388
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1163": {
      "op": "POP"
    },
    "1164": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4287,
        4297
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1165": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1167": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1168": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1169": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1170": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1172": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1174": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1175": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1177": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1178": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4298
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1179": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1181": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4304
      ],
      "op": "ADD",
      "path": "0"
    },
    "1182": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4304
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1183": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1185": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4304
      ],
      "op": "AND",
      "path": "0"
    },
    "1186": {
      "branch": 40,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4304
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4387
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F0"
    },
    "1190": {
      "branch": 40,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4278,
        4387
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4317,
        4327
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1193": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1195": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1198": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1200": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1202": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1203": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1204": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1205": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1207": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1208": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1209": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4328
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1210": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4334
      ],
      "op": "ADD",
      "path": "0"
    },
    "1211": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4334
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1212": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1214": {
      "branch": 41,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4334
      ],
      "op": "AND",
      "path": "0"
    },
    "1215": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1216": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4386
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1217": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4386
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F0"
    },
    "1220": {
      "branch": 41,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4386
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1228": {
      "op": "SHL"
    },
    "1229": {
      "op": "SUB"
    },
    "1230": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1231": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "AND",
      "path": "0"
    },
    "1232": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1234": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1235": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1236": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1237": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1239": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1241": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1243": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1244": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1246": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1247": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1248": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4363
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1249": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4375,
        4385
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1250": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1251": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1254": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4374
      ],
      "op": "ADD",
      "path": "0"
    },
    "1255": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1256": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1257": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1258": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1259": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1260": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1261": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1263": {
      "branch": 42,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4338,
        4386
      ],
      "op": "AND",
      "path": "0"
    },
    "1264": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4309,
        4386
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1265": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4234,
        4389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F9"
    },
    "1268": {
      "branch": 42,
      "fn": "EHR.updateRecordHash",
      "offset": [
        4234,
        4389
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1269": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4234,
        4389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1271": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4234,
        4389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1272": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4234,
        4389
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1273": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4234,
        4389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "SUB"
    },
    "1282": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 12
    },
    "1283": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1284": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "AND",
      "path": "0"
    },
    "1285": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1287": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1288": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1289": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1290": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1292": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1294": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1295": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1297": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1298": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4423
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1299": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1301": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4428
      ],
      "op": "ADD",
      "path": "0"
    },
    "1302": {
      "fn": "EHR.updateRecordHash",
      "offset": [
        4399,
        4436
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1303": {
      "fn": "EHR.updateRecordHash",
      "jump": "o",
      "offset": [
        4040,
        4443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1304": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 13
    },
    "1314": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "AND",
      "path": "0"
    },
    "1315": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1317": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1319": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1320": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1322": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1324": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1325": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1326": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1327": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1329": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1330": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1331": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2816
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1332": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2822
      ],
      "op": "ADD",
      "path": "0"
    },
    "1333": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2822
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1334": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1336": {
      "fn": "EHR.createDoctor",
      "offset": [
        2793,
        2822
      ],
      "op": "AND",
      "path": "0"
    },
    "1337": {
      "branch": 43,
      "fn": "EHR.createDoctor",
      "offset": [
        2792,
        2822
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1338": {
      "fn": "EHR.createDoctor",
      "offset": [
        2784,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "1341": {
      "branch": 43,
      "fn": "EHR.createDoctor",
      "offset": [
        2784,
        2823
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1342": {
      "fn": "EHR.createDoctor",
      "offset": [
        2784,
        2823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1344": {
      "fn": "EHR.createDoctor",
      "offset": [
        2784,
        2823
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1345": {
      "fn": "EHR.createDoctor",
      "offset": [
        2784,
        2823
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1346": {
      "fn": "EHR.createDoctor",
      "offset": [
        2784,
        2823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "op": "SUB"
    },
    "1355": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 14
    },
    "1356": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "AND",
      "path": "0"
    },
    "1357": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1359": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1360": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1361": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1362": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1364": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1366": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1367": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1368": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1369": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1371": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1372": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1373": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2856
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1374": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1375": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1376": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56B"
    },
    "1379": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1380": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1381": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "ADD",
      "path": "0"
    },
    "1382": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1383": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1386": {
      "fn": "EHR.createDoctor",
      "jump": "i",
      "offset": [
        2833,
        2879
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1387": {
      "fn": "EHR.createDoctor",
      "offset": [
        2833,
        2879
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1395": {
      "op": "SHL"
    },
    "1396": {
      "op": "SUB"
    },
    "1397": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1398": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "AND",
      "path": "0"
    },
    "1399": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1401": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1402": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1403": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1404": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1406": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1408": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1409": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1410": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1411": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1413": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1414": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1415": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2912
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1416": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1417": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1418": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59B"
    },
    "1421": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1422": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1424": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1425": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2921
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1426": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1427": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1428": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1429": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "ADD",
      "path": "0"
    },
    "1430": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1431": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1434": {
      "fn": "EHR.createDoctor",
      "jump": "i",
      "offset": [
        2889,
        2933
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1435": {
      "fn": "EHR.createDoctor",
      "offset": [
        2889,
        2933
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "op": "SUB"
    },
    "1445": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 16
    },
    "1446": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "AND",
      "path": "0"
    },
    "1447": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1449": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1450": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1451": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1452": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1454": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1456": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1457": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1458": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1459": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1461": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1462": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1463": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2966
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1464": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1465": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1466": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "1469": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1470": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1472": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2973
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1473": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2973
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1474": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1475": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2973
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1476": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1477": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "ADD",
      "path": "0"
    },
    "1478": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1479": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1482": {
      "fn": "EHR.createDoctor",
      "jump": "i",
      "offset": [
        2943,
        2992
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1483": {
      "fn": "EHR.createDoctor",
      "offset": [
        2943,
        2992
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1484": {
      "op": "POP"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "op": "SUB"
    },
    "1493": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 17
    },
    "1494": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "AND",
      "path": "0"
    },
    "1495": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1497": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1498": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1499": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1500": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1502": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1504": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1505": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1507": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1509": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1510": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3025
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1511": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3031
      ],
      "op": "ADD",
      "path": "0"
    },
    "1512": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1513": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1516": {
      "op": "NOT"
    },
    "1517": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "AND",
      "path": "0"
    },
    "1518": {
      "fn": "EHR.createDoctor",
      "offset": [
        3034,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1520": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1521": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1522": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "OR",
      "path": "0"
    },
    "1523": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1525": {
      "fn": "EHR.createDoctor",
      "offset": [
        3002,
        3038
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 18
    },
    "1527": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1528": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1529": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "1532": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1533": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5B"
    },
    "1536": {
      "fn": "EHR.createDoctor",
      "jump": "i",
      "offset": [
        3048,
        3061
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1537": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1538": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1539": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1540": {
      "fn": "EHR.createDoctor",
      "offset": [
        3048,
        3061
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1541": {
      "op": "POP"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x40"
    },
    "1545": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "SUB"
    },
    "1554": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1555": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "AND",
      "path": "0"
    },
    "1556": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1557": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4CD17B5D25F6EA7EFAA933B18D886D9EBCB6B66E8A67F82A70A472BF1FC2004D"
    },
    "1590": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1591": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1593": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1594": {
      "fn": "EHR.createDoctor",
      "offset": [
        3076,
        3106
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1595": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "POP",
      "path": "0"
    },
    "1596": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "POP",
      "path": "0"
    },
    "1597": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "POP",
      "path": "0"
    },
    "1598": {
      "fn": "EHR.createDoctor",
      "offset": [
        2509,
        3113
      ],
      "op": "POP",
      "path": "0"
    },
    "1599": {
      "fn": "EHR.createDoctor",
      "jump": "o",
      "offset": [
        2509,
        3113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1600": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1607": {
      "op": "SHL"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 20
    },
    "1610": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "AND",
      "path": "0"
    },
    "1611": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4813,
        4817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1613": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1615": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1616": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1618": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1620": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1621": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1622": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1623": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1625": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1626": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4860
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1627": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4866
      ],
      "op": "ADD",
      "path": "0"
    },
    "1628": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4866
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1629": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1631": {
      "branch": 44,
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4866
      ],
      "op": "AND",
      "path": "0"
    },
    "1632": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1633": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4901
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1634": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x686"
    },
    "1637": {
      "branch": 44,
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1648": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "AND",
      "path": "0"
    },
    "1649": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1651": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1652": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1653": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1654": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1656": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1658": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1659": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1661": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1662": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4895
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1663": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1665": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4901
      ],
      "op": "ADD",
      "path": "0"
    },
    "1666": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4901
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1667": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1669": {
      "branch": 45,
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4870,
        4901
      ],
      "op": "AND",
      "path": "0"
    },
    "1670": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4837,
        4901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1671": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4829,
        4902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68F"
    },
    "1674": {
      "branch": 45,
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4829,
        4902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1675": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4829,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1677": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4829,
        4902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1678": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4829,
        4902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1679": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4829,
        4902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "SUB"
    },
    "1689": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "1690": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1691": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "AND",
      "path": "0"
    },
    "1692": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1694": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1695": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1696": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1697": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1699": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1701": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1702": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1703": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1704": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1706": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1707": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1708": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4944
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1709": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1710": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1711": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "AND",
      "path": "0"
    },
    "1712": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1713": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1714": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1716": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1717": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4955
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1718": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1719": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1720": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1721": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1722": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1723": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1725": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4919,
        4971
      ],
      "op": "AND",
      "path": "0"
    },
    "1726": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1727": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1728": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "POP",
      "path": "0"
    },
    "1729": {
      "fn": "EHR.doctorAuthorized",
      "offset": [
        4717,
        4978
      ],
      "op": "POP",
      "path": "0"
    },
    "1730": {
      "fn": "EHR.doctorAuthorized",
      "jump": "o",
      "offset": [
        4717,
        4978
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1731": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1732": {
      "fn": "EHR.createPatient",
      "offset": [
        1871,
        1881
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 22
    },
    "1733": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1735": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1736": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1737": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1738": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1740": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1742": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1743": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1744": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1745": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1747": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1748": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1749": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1882
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1750": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1888
      ],
      "op": "ADD",
      "path": "0"
    },
    "1751": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1888
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1752": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1754": {
      "branch": 46,
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1888
      ],
      "op": "AND",
      "path": "0"
    },
    "1755": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1756": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1924
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1757": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1760": {
      "branch": 46,
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1771": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "AND",
      "path": "0"
    },
    "1772": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1774": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1775": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1776": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1777": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1779": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1781": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1782": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1784": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1785": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1918
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1786": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1788": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1924
      ],
      "op": "ADD",
      "path": "0"
    },
    "1789": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1924
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1790": {
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1792": {
      "branch": 47,
      "fn": "EHR.createPatient",
      "offset": [
        1893,
        1924
      ],
      "op": "AND",
      "path": "0"
    },
    "1793": {
      "fn": "EHR.createPatient",
      "offset": [
        1892,
        1924
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1794": {
      "fn": "EHR.createPatient",
      "offset": [
        1863,
        1924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1795": {
      "fn": "EHR.createPatient",
      "offset": [
        1855,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70B"
    },
    "1798": {
      "branch": 47,
      "fn": "EHR.createPatient",
      "offset": [
        1855,
        1925
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1799": {
      "fn": "EHR.createPatient",
      "offset": [
        1855,
        1925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1801": {
      "fn": "EHR.createPatient",
      "offset": [
        1855,
        1925
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1802": {
      "fn": "EHR.createPatient",
      "offset": [
        1855,
        1925
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1803": {
      "fn": "EHR.createPatient",
      "offset": [
        1855,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 23
    },
    "1813": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "AND",
      "path": "0"
    },
    "1814": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1816": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1817": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1818": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1819": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1943
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1821": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1823": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1824": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1825": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1826": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1828": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1829": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1830": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1960
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1831": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1832": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1833": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x734"
    },
    "1836": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1837": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1838": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "ADD",
      "path": "0"
    },
    "1839": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1840": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1843": {
      "fn": "EHR.createPatient",
      "jump": "i",
      "offset": [
        1935,
        1983
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1844": {
      "fn": "EHR.createPatient",
      "offset": [
        1935,
        1983
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 24
    },
    "1855": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "AND",
      "path": "0"
    },
    "1856": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1858": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1859": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1860": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1861": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1863": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1865": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1866": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1867": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1868": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1870": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1871": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1872": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2018
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1873": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1874": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1875": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x764"
    },
    "1878": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1879": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1881": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2027
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1882": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2027
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1883": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2027
      ],
      "op": "ADD",
      "path": "0"
    },
    "1884": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2027
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1885": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1886": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "ADD",
      "path": "0"
    },
    "1887": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1888": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1891": {
      "fn": "EHR.createPatient",
      "jump": "i",
      "offset": [
        1993,
        2039
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1892": {
      "fn": "EHR.createPatient",
      "offset": [
        1993,
        2039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 25
    },
    "1903": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "AND",
      "path": "0"
    },
    "1904": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1906": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1907": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1908": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1909": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1911": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1913": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1914": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1915": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1916": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1918": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1919": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1920": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2074
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1921": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1922": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1923": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "1926": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1927": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1928": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1929": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2081
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1930": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2081
      ],
      "op": "ADD",
      "path": "0"
    },
    "1931": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1932": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1933": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1934": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "ADD",
      "path": "0"
    },
    "1935": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1936": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1939": {
      "fn": "EHR.createPatient",
      "jump": "i",
      "offset": [
        2049,
        2101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1940": {
      "fn": "EHR.createPatient",
      "offset": [
        2049,
        2101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 26
    },
    "1951": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "AND",
      "path": "0"
    },
    "1952": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1954": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1955": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1956": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1957": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1959": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1961": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1962": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1963": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1964": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1966": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1967": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1968": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1969": {
      "fn": "EHR.createPatient",
      "offset": [
        2148,
        2158
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1970": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1971": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1972": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1973": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1975": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1976": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2147
      ],
      "op": "ADD",
      "path": "0"
    },
    "1977": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1978": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1979": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1980": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1981": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2159
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1982": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1983": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1984": {
      "fn": "EHR.createPatient",
      "offset": [
        2162,
        2166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1988": {
      "op": "NOT"
    },
    "1989": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1990": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1991": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "AND",
      "path": "0"
    },
    "1992": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1993": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "OR",
      "path": "0"
    },
    "1994": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1995": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1996": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2166
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1997": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2201
      ],
      "op": "SWAP7",
      "path": "0",
      "statement": 27
    },
    "1998": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2201
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1999": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2000": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2002": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2003": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2207
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2004": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2207
      ],
      "op": "ADD",
      "path": "0"
    },
    "2005": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2006": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2007": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2008": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2009": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "AND",
      "path": "0"
    },
    "2010": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2011": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "OR",
      "path": "0"
    },
    "2012": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2013": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2014": {
      "fn": "EHR.createPatient",
      "offset": [
        2176,
        2214
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2015": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2231
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x5"
    },
    "2017": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2248
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2018": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2248
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2019": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2248
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2020": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2248
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2021": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2248
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2022": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2023": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2030": {
      "op": "SHL"
    },
    "2031": {
      "op": "SUB"
    },
    "2032": {
      "op": "NOT"
    },
    "2033": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "AND",
      "path": "0"
    },
    "2034": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2035": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2036": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "OR",
      "path": "0"
    },
    "2037": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2038": {
      "fn": "EHR.createPatient",
      "offset": [
        2224,
        2275
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2039": {
      "fn": "EHR.createPatient",
      "offset": [
        2347,
        2413
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 29,
      "value": "0xE3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855"
    },
    "2072": {
      "fn": "EHR.createPatient",
      "offset": [
        2315,
        2344
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2073": {
      "fn": "EHR.createPatient",
      "offset": [
        2315,
        2344
      ],
      "op": "ADD",
      "path": "0"
    },
    "2074": {
      "fn": "EHR.createPatient",
      "offset": [
        2315,
        2413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2075": {
      "fn": "EHR.createPatient",
      "offset": [
        2315,
        2413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2076": {
      "fn": "EHR.createPatient",
      "offset": [
        2315,
        2413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2077": {
      "fn": "EHR.createPatient",
      "offset": [
        2315,
        2413
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2078": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 30
    },
    "2079": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2080": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "EHR.createPatient",
      "offset": [
        2111,
        2136
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2082": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82A"
    },
    "2085": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2086": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5B"
    },
    "2089": {
      "fn": "EHR.createPatient",
      "jump": "i",
      "offset": [
        2423,
        2437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2090": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2091": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2092": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2093": {
      "fn": "EHR.createPatient",
      "offset": [
        2423,
        2437
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2094": {
      "op": "POP"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x40"
    },
    "2098": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2099": {
      "fn": "EHR.createPatient",
      "offset": [
        2485,
        2495
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2100": {
      "fn": "EHR.createPatient",
      "offset": [
        2485,
        2495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2107": {
      "op": "SHL"
    },
    "2108": {
      "op": "SUB"
    },
    "2109": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2110": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "AND",
      "path": "0"
    },
    "2111": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2112": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x98D045482CDB3A3EB48EAFFED7579D8339191329FF0088239DD97AC546D59CBA"
    },
    "2145": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2146": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2148": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2149": {
      "fn": "EHR.createPatient",
      "offset": [
        2452,
        2496
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2150": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "POP",
      "path": "0"
    },
    "2151": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "POP",
      "path": "0"
    },
    "2152": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "POP",
      "path": "0"
    },
    "2153": {
      "fn": "EHR.createPatient",
      "offset": [
        1569,
        2503
      ],
      "op": "POP",
      "path": "0"
    },
    "2154": {
      "fn": "EHR.createPatient",
      "jump": "o",
      "offset": [
        1569,
        2503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2155": {
      "op": "JUMPDEST"
    },
    "2156": {
      "op": "DUP3"
    },
    "2157": {
      "op": "DUP1"
    },
    "2158": {
      "op": "SLOAD"
    },
    "2159": {
      "op": "PUSH2",
      "value": "0x877"
    },
    "2162": {
      "op": "SWAP1"
    },
    "2163": {
      "op": "PUSH2",
      "value": "0xB82"
    },
    "2166": {
      "jump": "i",
      "op": "JUMP"
    },
    "2167": {
      "op": "JUMPDEST"
    },
    "2168": {
      "op": "SWAP1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2171": {
      "op": "MSTORE"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2176": {
      "op": "KECCAK256"
    },
    "2177": {
      "op": "SWAP1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2183": {
      "op": "SWAP1"
    },
    "2184": {
      "op": "DIV"
    },
    "2185": {
      "op": "DUP2"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "op": "SWAP3"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "PUSH2",
      "value": "0x899"
    },
    "2192": {
      "op": "JUMPI"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2195": {
      "op": "DUP6"
    },
    "2196": {
      "op": "SSTORE"
    },
    "2197": {
      "op": "PUSH2",
      "value": "0x8DF"
    },
    "2200": {
      "op": "JUMP"
    },
    "2201": {
      "op": "JUMPDEST"
    },
    "2202": {
      "op": "DUP3"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2205": {
      "op": "LT"
    },
    "2206": {
      "op": "PUSH2",
      "value": "0x8B2"
    },
    "2209": {
      "op": "JUMPI"
    },
    "2210": {
      "op": "DUP1"
    },
    "2211": {
      "op": "MLOAD"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2214": {
      "op": "NOT"
    },
    "2215": {
      "op": "AND"
    },
    "2216": {
      "op": "DUP4"
    },
    "2217": {
      "op": "DUP1"
    },
    "2218": {
      "op": "ADD"
    },
    "2219": {
      "op": "OR"
    },
    "2220": {
      "op": "DUP6"
    },
    "2221": {
      "op": "SSTORE"
    },
    "2222": {
      "op": "PUSH2",
      "value": "0x8DF"
    },
    "2225": {
      "op": "JUMP"
    },
    "2226": {
      "op": "JUMPDEST"
    },
    "2227": {
      "op": "DUP3"
    },
    "2228": {
      "op": "DUP1"
    },
    "2229": {
      "op": "ADD"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "ADD"
    },
    "2233": {
      "op": "DUP6"
    },
    "2234": {
      "op": "SSTORE"
    },
    "2235": {
      "op": "DUP3"
    },
    "2236": {
      "op": "ISZERO"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x8DF"
    },
    "2240": {
      "op": "JUMPI"
    },
    "2241": {
      "op": "SWAP2"
    },
    "2242": {
      "op": "DUP3"
    },
    "2243": {
      "op": "ADD"
    },
    "2244": {
      "op": "JUMPDEST"
    },
    "2245": {
      "op": "DUP3"
    },
    "2246": {
      "op": "DUP2"
    },
    "2247": {
      "op": "GT"
    },
    "2248": {
      "op": "ISZERO"
    },
    "2249": {
      "op": "PUSH2",
      "value": "0x8DF"
    },
    "2252": {
      "op": "JUMPI"
    },
    "2253": {
      "op": "DUP3"
    },
    "2254": {
      "op": "MLOAD"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "SSTORE"
    },
    "2257": {
      "op": "SWAP2"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2260": {
      "op": "ADD"
    },
    "2261": {
      "op": "SWAP2"
    },
    "2262": {
      "op": "SWAP1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "ADD"
    },
    "2266": {
      "op": "SWAP1"
    },
    "2267": {
      "op": "PUSH2",
      "value": "0x8C4"
    },
    "2270": {
      "op": "JUMP"
    },
    "2271": {
      "op": "JUMPDEST"
    },
    "2272": {
      "op": "POP"
    },
    "2273": {
      "op": "PUSH2",
      "value": "0x8EB"
    },
    "2276": {
      "op": "SWAP3"
    },
    "2277": {
      "op": "SWAP2"
    },
    "2278": {
      "op": "POP"
    },
    "2279": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2282": {
      "jump": "i",
      "op": "JUMP"
    },
    "2283": {
      "op": "JUMPDEST"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "op": "SWAP1"
    },
    "2286": {
      "jump": "o",
      "op": "JUMP"
    },
    "2287": {
      "op": "JUMPDEST"
    },
    "2288": {
      "op": "JUMPDEST"
    },
    "2289": {
      "op": "DUP1"
    },
    "2290": {
      "op": "DUP3"
    },
    "2291": {
      "op": "GT"
    },
    "2292": {
      "op": "ISZERO"
    },
    "2293": {
      "op": "PUSH2",
      "value": "0x8EB"
    },
    "2296": {
      "op": "JUMPI"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2299": {
      "op": "DUP2"
    },
    "2300": {
      "op": "SSTORE"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "op": "PUSH2",
      "value": "0x8F0"
    },
    "2307": {
      "op": "JUMP"
    },
    "2308": {
      "op": "JUMPDEST"
    },
    "2309": {
      "op": "DUP1"
    },
    "2310": {
      "op": "CALLDATALOAD"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "op": "DUP2"
    },
    "2320": {
      "op": "AND"
    },
    "2321": {
      "op": "DUP2"
    },
    "2322": {
      "op": "EQ"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x91B"
    },
    "2326": {
      "op": "JUMPI"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2329": {
      "op": "DUP1"
    },
    "2330": {
      "op": "REVERT"
    },
    "2331": {
      "op": "JUMPDEST"
    },
    "2332": {
      "op": "SWAP2"
    },
    "2333": {
      "op": "SWAP1"
    },
    "2334": {
      "op": "POP"
    },
    "2335": {
      "jump": "o",
      "op": "JUMP"
    },
    "2336": {
      "op": "JUMPDEST"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2341": {
      "op": "DUP3"
    },
    "2342": {
      "op": "DUP5"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "op": "SLT"
    },
    "2345": {
      "op": "ISZERO"
    },
    "2346": {
      "op": "PUSH2",
      "value": "0x932"
    },
    "2349": {
      "op": "JUMPI"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2352": {
      "op": "DUP1"
    },
    "2353": {
      "op": "REVERT"
    },
    "2354": {
      "op": "JUMPDEST"
    },
    "2355": {
      "op": "PUSH2",
      "value": "0x93B"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2362": {
      "jump": "i",
      "op": "JUMP"
    },
    "2363": {
      "op": "JUMPDEST"
    },
    "2364": {
      "op": "SWAP4"
    },
    "2365": {
      "op": "SWAP3"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "op": "POP"
    },
    "2369": {
      "jump": "o",
      "op": "JUMP"
    },
    "2370": {
      "op": "JUMPDEST"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2373": {
      "op": "DUP1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "DUP1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2379": {
      "op": "DUP6"
    },
    "2380": {
      "op": "DUP8"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "op": "SLT"
    },
    "2383": {
      "op": "ISZERO"
    },
    "2384": {
      "op": "PUSH2",
      "value": "0x958"
    },
    "2387": {
      "op": "JUMPI"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2390": {
      "op": "DUP1"
    },
    "2391": {
      "op": "REVERT"
    },
    "2392": {
      "op": "JUMPDEST"
    },
    "2393": {
      "op": "DUP5"
    },
    "2394": {
      "op": "CALLDATALOAD"
    },
    "2395": {
      "op": "SWAP4"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2399": {
      "op": "DUP6"
    },
    "2400": {
      "op": "ADD"
    },
    "2401": {
      "op": "CALLDATALOAD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2404": {
      "op": "DUP2"
    },
    "2405": {
      "op": "AND"
    },
    "2406": {
      "op": "DUP2"
    },
    "2407": {
      "op": "EQ"
    },
    "2408": {
      "op": "PUSH2",
      "value": "0x970"
    },
    "2411": {
      "op": "JUMPI"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2414": {
      "op": "DUP1"
    },
    "2415": {
      "op": "REVERT"
    },
    "2416": {
      "op": "JUMPDEST"
    },
    "2417": {
      "op": "SWAP4"
    },
    "2418": {
      "op": "SWAP7"
    },
    "2419": {
      "op": "SWAP4"
    },
    "2420": {
      "op": "SWAP6"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "op": "POP"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "POP"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2427": {
      "op": "DUP3"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "CALLDATALOAD"
    },
    "2430": {
      "op": "SWAP2"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "CALLDATALOAD"
    },
    "2435": {
      "op": "SWAP1"
    },
    "2436": {
      "jump": "o",
      "op": "JUMP"
    },
    "2437": {
      "op": "JUMPDEST"
    },
    "2438": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2445": {
      "op": "SHL"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2453": {
      "op": "MSTORE"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2458": {
      "op": "REVERT"
    },
    "2459": {
      "op": "JUMPDEST"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2462": {
      "op": "DUP3"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2465": {
      "op": "DUP4"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "op": "SLT"
    },
    "2468": {
      "op": "PUSH2",
      "value": "0x9AC"
    },
    "2471": {
      "op": "JUMPI"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2474": {
      "op": "DUP1"
    },
    "2475": {
      "op": "REVERT"
    },
    "2476": {
      "op": "JUMPDEST"
    },
    "2477": {
      "op": "DUP2"
    },
    "2478": {
      "op": "CALLDATALOAD"
    },
    "2479": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2488": {
      "op": "DUP1"
    },
    "2489": {
      "op": "DUP3"
    },
    "2490": {
      "op": "GT"
    },
    "2491": {
      "op": "ISZERO"
    },
    "2492": {
      "op": "PUSH2",
      "value": "0x9C7"
    },
    "2495": {
      "op": "JUMPI"
    },
    "2496": {
      "op": "PUSH2",
      "value": "0x9C7"
    },
    "2499": {
      "op": "PUSH2",
      "value": "0x985"
    },
    "2502": {
      "jump": "i",
      "op": "JUMP"
    },
    "2503": {
      "op": "JUMPDEST"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2506": {
      "op": "MLOAD"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2509": {
      "op": "DUP4"
    },
    "2510": {
      "op": "ADD"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2513": {
      "op": "NOT"
    },
    "2514": {
      "op": "SWAP1"
    },
    "2515": {
      "op": "DUP2"
    },
    "2516": {
      "op": "AND"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "op": "AND"
    },
    "2521": {
      "op": "DUP2"
    },
    "2522": {
      "op": "ADD"
    },
    "2523": {
      "op": "SWAP1"
    },
    "2524": {
      "op": "DUP3"
    },
    "2525": {
      "op": "DUP3"
    },
    "2526": {
      "op": "GT"
    },
    "2527": {
      "op": "DUP2"
    },
    "2528": {
      "op": "DUP4"
    },
    "2529": {
      "op": "LT"
    },
    "2530": {
      "op": "OR"
    },
    "2531": {
      "op": "ISZERO"
    },
    "2532": {
      "op": "PUSH2",
      "value": "0x9EF"
    },
    "2535": {
      "op": "JUMPI"
    },
    "2536": {
      "op": "PUSH2",
      "value": "0x9EF"
    },
    "2539": {
      "op": "PUSH2",
      "value": "0x985"
    },
    "2542": {
      "jump": "i",
      "op": "JUMP"
    },
    "2543": {
      "op": "JUMPDEST"
    },
    "2544": {
      "op": "DUP2"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2547": {
      "op": "MSTORE"
    },
    "2548": {
      "op": "DUP4"
    },
    "2549": {
      "op": "DUP2"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "DUP7"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2554": {
      "op": "DUP6"
    },
    "2555": {
      "op": "DUP9"
    },
    "2556": {
      "op": "ADD"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "GT"
    },
    "2559": {
      "op": "ISZERO"
    },
    "2560": {
      "op": "PUSH2",
      "value": "0xA08"
    },
    "2563": {
      "op": "JUMPI"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2566": {
      "op": "DUP1"
    },
    "2567": {
      "op": "REVERT"
    },
    "2568": {
      "op": "JUMPDEST"
    },
    "2569": {
      "op": "DUP4"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2572": {
      "op": "DUP8"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2576": {
      "op": "DUP4"
    },
    "2577": {
      "op": "ADD"
    },
    "2578": {
      "op": "CALLDATACOPY"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2583": {
      "op": "DUP6"
    },
    "2584": {
      "op": "DUP4"
    },
    "2585": {
      "op": "ADD"
    },
    "2586": {
      "op": "ADD"
    },
    "2587": {
      "op": "MSTORE"
    },
    "2588": {
      "op": "DUP1"
    },
    "2589": {
      "op": "SWAP5"
    },
    "2590": {
      "op": "POP"
    },
    "2591": {
      "op": "POP"
    },
    "2592": {
      "op": "POP"
    },
    "2593": {
      "op": "POP"
    },
    "2594": {
      "op": "POP"
    },
    "2595": {
      "op": "SWAP3"
    },
    "2596": {
      "op": "SWAP2"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "op": "POP"
    },
    "2599": {
      "jump": "o",
      "op": "JUMP"
    },
    "2600": {
      "op": "JUMPDEST"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2605": {
      "op": "DUP3"
    },
    "2606": {
      "op": "DUP5"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "op": "SLT"
    },
    "2609": {
      "op": "ISZERO"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0xA3A"
    },
    "2613": {
      "op": "JUMPI"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2616": {
      "op": "DUP1"
    },
    "2617": {
      "op": "REVERT"
    },
    "2618": {
      "op": "JUMPDEST"
    },
    "2619": {
      "op": "DUP2"
    },
    "2620": {
      "op": "CALLDATALOAD"
    },
    "2621": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2630": {
      "op": "DUP2"
    },
    "2631": {
      "op": "GT"
    },
    "2632": {
      "op": "ISZERO"
    },
    "2633": {
      "op": "PUSH2",
      "value": "0xA51"
    },
    "2636": {
      "op": "JUMPI"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2639": {
      "op": "DUP1"
    },
    "2640": {
      "op": "REVERT"
    },
    "2641": {
      "op": "JUMPDEST"
    },
    "2642": {
      "op": "PUSH2",
      "value": "0xA5D"
    },
    "2645": {
      "op": "DUP5"
    },
    "2646": {
      "op": "DUP3"
    },
    "2647": {
      "op": "DUP6"
    },
    "2648": {
      "op": "ADD"
    },
    "2649": {
      "op": "PUSH2",
      "value": "0x99B"
    },
    "2652": {
      "jump": "i",
      "op": "JUMP"
    },
    "2653": {
      "op": "JUMPDEST"
    },
    "2654": {
      "op": "SWAP5"
    },
    "2655": {
      "op": "SWAP4"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "jump": "o",
      "op": "JUMP"
    },
    "2661": {
      "op": "JUMPDEST"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "DUP1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2667": {
      "op": "DUP4"
    },
    "2668": {
      "op": "DUP6"
    },
    "2669": {
      "op": "SUB"
    },
    "2670": {
      "op": "SLT"
    },
    "2671": {
      "op": "ISZERO"
    },
    "2672": {
      "op": "PUSH2",
      "value": "0xA78"
    },
    "2675": {
      "op": "JUMPI"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2678": {
      "op": "DUP1"
    },
    "2679": {
      "op": "REVERT"
    },
    "2680": {
      "op": "JUMPDEST"
    },
    "2681": {
      "op": "PUSH2",
      "value": "0xA81"
    },
    "2684": {
      "op": "DUP4"
    },
    "2685": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2688": {
      "jump": "i",
      "op": "JUMP"
    },
    "2689": {
      "op": "JUMPDEST"
    },
    "2690": {
      "op": "SWAP5"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2693": {
      "op": "SWAP4"
    },
    "2694": {
      "op": "SWAP1"
    },
    "2695": {
      "op": "SWAP4"
    },
    "2696": {
      "op": "ADD"
    },
    "2697": {
      "op": "CALLDATALOAD"
    },
    "2698": {
      "op": "SWAP4"
    },
    "2699": {
      "op": "POP"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "jump": "o",
      "op": "JUMP"
    },
    "2703": {
      "op": "JUMPDEST"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2706": {
      "op": "DUP1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2709": {
      "op": "DUP1"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2712": {
      "op": "DUP6"
    },
    "2713": {
      "op": "DUP8"
    },
    "2714": {
      "op": "SUB"
    },
    "2715": {
      "op": "SLT"
    },
    "2716": {
      "op": "ISZERO"
    },
    "2717": {
      "op": "PUSH2",
      "value": "0xAA5"
    },
    "2720": {
      "op": "JUMPI"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2723": {
      "op": "DUP1"
    },
    "2724": {
      "op": "REVERT"
    },
    "2725": {
      "op": "JUMPDEST"
    },
    "2726": {
      "op": "DUP5"
    },
    "2727": {
      "op": "CALLDATALOAD"
    },
    "2728": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2737": {
      "op": "DUP1"
    },
    "2738": {
      "op": "DUP3"
    },
    "2739": {
      "op": "GT"
    },
    "2740": {
      "op": "ISZERO"
    },
    "2741": {
      "op": "PUSH2",
      "value": "0xABD"
    },
    "2744": {
      "op": "JUMPI"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2747": {
      "op": "DUP1"
    },
    "2748": {
      "op": "REVERT"
    },
    "2749": {
      "op": "JUMPDEST"
    },
    "2750": {
      "op": "PUSH2",
      "value": "0xAC9"
    },
    "2753": {
      "op": "DUP9"
    },
    "2754": {
      "op": "DUP4"
    },
    "2755": {
      "op": "DUP10"
    },
    "2756": {
      "op": "ADD"
    },
    "2757": {
      "op": "PUSH2",
      "value": "0x99B"
    },
    "2760": {
      "jump": "i",
      "op": "JUMP"
    },
    "2761": {
      "op": "JUMPDEST"
    },
    "2762": {
      "op": "SWAP6"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2766": {
      "op": "DUP8"
    },
    "2767": {
      "op": "ADD"
    },
    "2768": {
      "op": "CALLDATALOAD"
    },
    "2769": {
      "op": "SWAP2"
    },
    "2770": {
      "op": "POP"
    },
    "2771": {
      "op": "DUP1"
    },
    "2772": {
      "op": "DUP3"
    },
    "2773": {
      "op": "GT"
    },
    "2774": {
      "op": "ISZERO"
    },
    "2775": {
      "op": "PUSH2",
      "value": "0xADF"
    },
    "2778": {
      "op": "JUMPI"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2781": {
      "op": "DUP1"
    },
    "2782": {
      "op": "REVERT"
    },
    "2783": {
      "op": "JUMPDEST"
    },
    "2784": {
      "op": "PUSH2",
      "value": "0xAEB"
    },
    "2787": {
      "op": "DUP9"
    },
    "2788": {
      "op": "DUP4"
    },
    "2789": {
      "op": "DUP10"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "op": "PUSH2",
      "value": "0x99B"
    },
    "2794": {
      "jump": "i",
      "op": "JUMP"
    },
    "2795": {
      "op": "JUMPDEST"
    },
    "2796": {
      "op": "SWAP5"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "op": "PUSH2",
      "value": "0xAF9"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2803": {
      "op": "DUP9"
    },
    "2804": {
      "op": "ADD"
    },
    "2805": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2808": {
      "jump": "i",
      "op": "JUMP"
    },
    "2809": {
      "op": "JUMPDEST"
    },
    "2810": {
      "op": "SWAP4"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2814": {
      "op": "DUP8"
    },
    "2815": {
      "op": "ADD"
    },
    "2816": {
      "op": "CALLDATALOAD"
    },
    "2817": {
      "op": "SWAP2"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "op": "DUP1"
    },
    "2820": {
      "op": "DUP3"
    },
    "2821": {
      "op": "GT"
    },
    "2822": {
      "op": "ISZERO"
    },
    "2823": {
      "op": "PUSH2",
      "value": "0xB0F"
    },
    "2826": {
      "op": "JUMPI"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2829": {
      "op": "DUP1"
    },
    "2830": {
      "op": "REVERT"
    },
    "2831": {
      "op": "JUMPDEST"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "op": "PUSH2",
      "value": "0xB1C"
    },
    "2836": {
      "op": "DUP8"
    },
    "2837": {
      "op": "DUP3"
    },
    "2838": {
      "op": "DUP9"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "op": "PUSH2",
      "value": "0x99B"
    },
    "2843": {
      "jump": "i",
      "op": "JUMP"
    },
    "2844": {
      "op": "JUMPDEST"
    },
    "2845": {
      "op": "SWAP2"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "op": "SWAP3"
    },
    "2849": {
      "op": "SWAP6"
    },
    "2850": {
      "op": "SWAP2"
    },
    "2851": {
      "op": "SWAP5"
    },
    "2852": {
      "op": "POP"
    },
    "2853": {
      "op": "SWAP3"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "jump": "o",
      "op": "JUMP"
    },
    "2856": {
      "op": "JUMPDEST"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2859": {
      "op": "DUP1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2862": {
      "op": "DUP4"
    },
    "2863": {
      "op": "DUP6"
    },
    "2864": {
      "op": "SUB"
    },
    "2865": {
      "op": "SLT"
    },
    "2866": {
      "op": "ISZERO"
    },
    "2867": {
      "op": "PUSH2",
      "value": "0xB3B"
    },
    "2870": {
      "op": "JUMPI"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2873": {
      "op": "DUP1"
    },
    "2874": {
      "op": "REVERT"
    },
    "2875": {
      "op": "JUMPDEST"
    },
    "2876": {
      "op": "PUSH2",
      "value": "0xB44"
    },
    "2879": {
      "op": "DUP4"
    },
    "2880": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2883": {
      "jump": "i",
      "op": "JUMP"
    },
    "2884": {
      "op": "JUMPDEST"
    },
    "2885": {
      "op": "SWAP2"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "op": "PUSH2",
      "value": "0xB52"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2892": {
      "op": "DUP5"
    },
    "2893": {
      "op": "ADD"
    },
    "2894": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2897": {
      "jump": "i",
      "op": "JUMP"
    },
    "2898": {
      "op": "JUMPDEST"
    },
    "2899": {
      "op": "SWAP1"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "op": "SWAP3"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "op": "SWAP3"
    },
    "2904": {
      "op": "SWAP1"
    },
    "2905": {
      "op": "POP"
    },
    "2906": {
      "jump": "o",
      "op": "JUMP"
    },
    "2907": {
      "op": "JUMPDEST"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2912": {
      "op": "DUP3"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "PUSH2",
      "value": "0xB7B"
    },
    "2917": {
      "op": "JUMPI"
    },
    "2918": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2925": {
      "op": "SHL"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2928": {
      "op": "MSTORE"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2933": {
      "op": "MSTORE"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2938": {
      "op": "REVERT"
    },
    "2939": {
      "op": "JUMPDEST"
    },
    "2940": {
      "op": "POP"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "ADD"
    },
    "2944": {
      "op": "SWAP1"
    },
    "2945": {
      "jump": "o",
      "op": "JUMP"
    },
    "2946": {
      "op": "JUMPDEST"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2949": {
      "op": "DUP2"
    },
    "2950": {
      "op": "DUP2"
    },
    "2951": {
      "op": "SHR"
    },
    "2952": {
      "op": "SWAP1"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "AND"
    },
    "2955": {
      "op": "DUP1"
    },
    "2956": {
      "op": "PUSH2",
      "value": "0xB96"
    },
    "2959": {
      "op": "JUMPI"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2962": {
      "op": "DUP3"
    },
    "2963": {
      "op": "AND"
    },
    "2964": {
      "op": "SWAP2"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "op": "JUMPDEST"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2969": {
      "op": "DUP3"
    },
    "2970": {
      "op": "LT"
    },
    "2971": {
      "op": "DUP2"
    },
    "2972": {
      "op": "SUB"
    },
    "2973": {
      "op": "PUSH2",
      "value": "0xBB6"
    },
    "2976": {
      "op": "JUMPI"
    },
    "2977": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2987": {
      "op": "MSTORE"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2992": {
      "op": "MSTORE"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2997": {
      "op": "REVERT"
    },
    "2998": {
      "op": "JUMPDEST"
    },
    "2999": {
      "op": "POP"
    },
    "3000": {
      "op": "SWAP2"
    },
    "3001": {
      "op": "SWAP1"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "28d2bf1c366d34ac9e4f973d77b5c3951cbf1c44",
  "source": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract EHR {\n\n    uint patientCount = 0;\n    uint doctorCount = 0;\n\n\n    struct Patient{\n        string firstName;\n        string lastName;\n        /// public key of patient\n        bytes pubKey;\n        /// doctors authorized to read/write this patient's EHR\n        mapping (address => bool) authorized;\n        bool valid;\n    }\n\n    struct Doctor{\n        string firstName;\n        string lastName;\n        /// public key of doctor\n        bytes pubKey;\n        bool valid;\n    }\n\n    struct MedicalRecord{\n        /// address of the doctor who created this record\n        address doctorAddress;\n        /// hash of latest file version\n        bytes32 hash;\n        bool valid;\n    }\n    \n    /// associate patient's wallet address with Patient struct\n    mapping (address => Patient) patients;\n    /// associate doctot's wallet address with Doctor struct\n    mapping (address => Doctor) doctors;\n    /// associate patient's wallet address with doctor address\n    mapping (address => address) patientProviders;\n    /// associate patient's wallet address with MedicalRecord\n    mapping (address => MedicalRecord) records;\n\n    event PatientCreation(address indexed _patient, address indexed _doctor);\n    event DoctorCreation(address indexed _doctor);\n    event DoctorAuth(address indexed _patient, address indexed _doctor, bool isAuthorized);\n    event MedicalRecordView(address indexed _patient, address indexed _viewer);\n    event MedicalRecordUpdate(address indexed _patient, address indexed _updator, bytes32 fileHash);\n\n\n    function createPatient(\n        string memory _firstName, \n        string memory _lastName, \n        address _patientAddress, \n        bytes memory _patientPublicKey\n    ) \n        public \n    {\n        /// only allow doctors to create patients, and patient can't already exist\n        require(doctors[msg.sender].valid && !patients[_patientAddress].valid);\n        patients[_patientAddress].firstName = _firstName;\n        patients[_patientAddress].lastName = _lastName;\n        patients[_patientAddress].pubKey = _patientPublicKey;\n        patients[_patientAddress].authorized[msg.sender] = true;\n        patients[_patientAddress].valid = true;\n        records[_patientAddress].doctorAddress = msg.sender;\n        /// hash of null data\n        records[_patientAddress].hash = 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855;\n        patientCount++;\n        emit PatientCreation(_patientAddress, msg.sender);\n    }\n\n    function createDoctor(\n        string memory _firstName, \n        string memory _lastName, \n        address _doctorAddress, \n        bytes memory _doctorPublicKey\n    ) \n        public\n    {\n        /// only admin can create doctor, and doctor must not already exist\n        require(!doctors[_doctorAddress].valid);\n        doctors[_doctorAddress].firstName = _firstName;\n        doctors[_doctorAddress].lastName = _lastName;\n        doctors[_doctorAddress].pubKey = _doctorPublicKey;\n        doctors[_doctorAddress].valid = true;\n        doctorCount++;\n        emit DoctorCreation(_doctorAddress);\n    }\n\n    function authorizeDoctor(address _doctorAddress) public\n    {\n        /// doctor should exist and patient should exist and doctor shouldn't already have authorization\n        require(doctors[_doctorAddress].valid \n                && patients[msg.sender].valid\n                && !patients[msg.sender].authorized[_doctorAddress]);\n        patients[msg.sender].authorized[_doctorAddress] = true;\n        emit DoctorAuth(msg.sender, _doctorAddress, true);\n    }\n\n    function deauthorizeDoctor(address _doctorAddress) public\n    {\n        /// doctor should exist and patient should exist and doctor should have authorization\n        require(doctors[_doctorAddress].valid \n                && patients[msg.sender].valid \n                && patients[msg.sender].authorized[_doctorAddress]);\n        patients[msg.sender].authorized[_doctorAddress] = false;\n        emit DoctorAuth(msg.sender, _doctorAddress, false);\n    }\n\n    function updateRecordHash(address _patientAddress, bytes32 _hash) public {\n        /// patient should exist and either (sender is patient) or (sender is doctor and doctor is authorized)\n        require(patients[_patientAddress].valid && (patients[msg.sender].valid || (doctors[msg.sender].valid && patients[_patientAddress].authorized[msg.sender])));\n        records[_patientAddress].hash = _hash;\n    }\n\n    function patientExists(address _patientAddress) public view returns (bool) {\n        return patients[_patientAddress].valid;\n    }\n\n    function doctorExists(address _doctorAddress) public view returns (bool) {\n        return doctors[_doctorAddress].valid;\n    }\n\n    function doctorAuthorized(address _doctorAddress, address _patientAddress) public view returns (bool) {\n        require(doctors[_doctorAddress].valid && patients[_patientAddress].valid);\n        return patients[_patientAddress].authorized[_doctorAddress];\n    }\n\n    function getAddress(bytes memory pubkey) public pure returns (address) {\n        return address(uint160(uint256(keccak256(pubkey))));\n    }\n\n    //input a signature and determine the v, r and s values\n    function splitSignature(bytes memory signature) public pure\n        returns (uint8 v, bytes32 r, bytes32 s)\n    {\n        require(signature.length == 65);\n\n        assembly {\n            // first 32 bytes, after the length prefix.\n            r := mload(add(signature, 32))\n            // second 32 bytes.\n            s := mload(add(signature, 64))\n            // final byte (first byte of the next 32 bytes).\n            v := byte(0, mload(add(signature, 96)))\n        }\n\n        return (v, r, s);\n    }\n\n    //input a message hash, v, r and s values and generate the public key\n    function recoverPublicAddress (bytes32 messagehash, uint8 v, bytes32 r, bytes32 s) public pure\n    returns (address sender) {\n        return ecrecover(messagehash, v, r, s);\n  }\n\n}",
  "sourceMap": "33:5920:0:-:0;;;73:1;53:21;;99:1;80:20;;33:5920;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/EHR.sol",
  "type": "contract"
}